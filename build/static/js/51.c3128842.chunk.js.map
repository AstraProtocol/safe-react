{"version":3,"sources":["utils/events/safeApps.ts","routes/safe/components/Apps/hooks/appList/useAppList.ts","routes/safe/components/Apps/hooks/appList/useCustomSafeApps.ts","routes/safe/components/Apps/hooks/appList/usePinnedSafeApps.ts","logic/safe/api/fetchSafeApps.ts","routes/safe/components/Apps/hooks/appList/useRemoteSafeApps.ts","logic/collectibles/store/selectors/index.ts","routes/safe/components/Apps/components/SafeAppCard/SafeAppSkeleton.tsx","routes/safe/components/Apps/components/SafeAppCard/SafeAppCard.tsx","utils/clipboard.ts","routes/safe/components/Balances/Collectibles/components/Item.tsx","components/VirtualizedList/index.tsx","components/InfoAlert/index.tsx","routes/safe/components/Balances/Collectibles/index.tsx"],"names":["SAFE_APPS","OPEN_APP","event","GTM_EVENT","CLICK","action","PIN","UNPIN","SEARCH","META","ADD_CUSTOM_APP","TRANSACTION_CONFIRMED","TRANSACTION_REJECTED","LEGACY_API_CALL","SHARED_APP_LANDING","SHARED_APP_CHAIN_ID","SHARED_APP_OPEN_DEMO","SHARED_APP_OPEN_AFTER_SAFE_CREATION","SAFE_APPS_EVENTS","addEventCategory","useAppList","useRemoteSafeApps","remoteSafeApps","remoteAppsFetchStatus","status","useState","customSafeApps","setCustomSafeApps","loaded","setLoaded","updateCustomSafeApps","useCallback","newCustomSafeApps","saveToStorage","APPS_STORAGE_KEY","map","url","useEffect","fetchAppCallback","res","error","prev","prevAppsCopy","appIndex","findIndex","a","splice","fetchStatus","FETCH_STATUS","SUCCESS","serializedApps","loadFromStorage","app","getEmptySafeApp","trim","id","custom","forEach","getAppInfoFromUrl","then","appFromUrl","catch","err","logError","Errors","_900","message","loadCustomApps","useCustomSafeApps","pinnedSafeAppIds","updatePinnedSafeApps","pinnedAppIds","PINNED_SAFE_APP_IDS","filteredPinnedAppsIds","filter","pinnedAppId","some","loadPinnedAppIds","usePinnedSafeApps","remoteIsLoading","LOADING","allApps","useMemo","sort","b","name","toLowerCase","localeCompare","appList","customApps","persistedApp","pinnedSafeApps","includes","addCustomApp","newList","removeApp","appId","newPersistedList","togglePin","appName","newPinnedIds","trackEvent","label","indexOf","push","getSafeApp","urlInstance","URL","safeAppUrl","hostname","pathname","find","appUrlInstance","isSameUrl","isLoading","fetchSafeAppsList","getSafeApps","_getChainId","client_url","window","location","origin","fetchPromise","setRemoteSafeApps","NOT_ASKED","setStatus","dispatch","useDispatch","loadAppsList","finally","result","length","String","Error","ERROR","_902","showNotification","NOTIFICATIONS","SAFE_APPS_FETCH_ERROR_MSG","nftAssets","state","NFT_ASSETS_REDUCER_ID","nftTokens","NFT_TOKENS_REDUCER_ID","nftAssetsSelector","createSelector","assets","nftTokensSelector","tokens","items","nftLoadedSelector","nftAssetsToListSelector","Object","values","nftAssetsAddressFromNftTokensSelector","userNftTokens","addresses","nftToken","assetAddress","uniqueAddresses","Set","Array","from","orderedNFTAssets","nftAssetsFromNftTokensSelector","nftAssetsFromNftTokens","address","gradientSK","keyframes","SafeAppLogoSK","styled","div","props","size","SafeAppTitleSK","SafeAppDescriptionSK","setSafeAppLogoFallback","SafeAppCard","safeApp","isPinned","isCustomSafeApp","onRemove","chainId","useSelector","currentChainId","safeAddress","useSafeAddress","appsPath","generateSafeRoute","SAFE_ROUTES","APPS","shortName","getShortName","openSafeAppLink","encodeURI","SafeAppContainer","StyledAppCard","LogoContainer","DescriptionContainer","StyledLink","to","SafeAppLogo","src","iconUrl","alt","onError","SafeAppTitle","SafeAppDescription","color","description","ActionsContainer","onClick","e","preventDefault","IconBtn","text","range","document","createRange","listener","clipboardData","setData","selectNodeContents","body","getSelection","addRange","addEventListener","execCommand","removeEventListener","removeAllRanges","copyToClipboard","getShareSafeAppUrl","SHARE_SAFE_APP_URL_COPIED","type","tooltip","PinnedIcon","currentTarget","onerror","fallbackSafeAppLogoSvg","SAFE_APP_CARD_HEIGHT","SAFE_APP_CARD_PADDING","motion","attrs","layout","initial","opacity","animate","exit","Link","Card","primary200","primary300","img","Title","Text","IconButton","Icon","useStyles","makeStyles","item","backgroundColor","borderRadius","boxShadow","boxSizing","cursor","granted","display","flexDirection","flexGrow","minHeight","minWidth","position","mainContent","zIndex","extraContent","alignItems","bottom","justifyContent","left","right","top","transition","image","maxWidth","maxHeight","width","height","objectFit","margin","alignSelf","textContainer","fontColor","flexShrink","fontSize","lineHeight","padding","title","fontWeight","overflow","textOverflow","whiteSpace","buttonIcon","marginRight","sm","sendButton","xs","Item","data","onSend","grantedSelector","classes","className","loading","cn","Button","variant","ignoreResizeObserverErrors","stopImmediatePropagation","VirtualizedList","children","style","InfoAlert","useCachedState","isClosed","setClosed","severity","onClose","Paragraph","noMargin","createStyles","cardInner","cardOuter","gridRow","columnGap","gridTemplateColumns","marginBottom","rowGap","screenXs","screenSm","titleImg","backgroundPosition","backgroundRepeat","backgroundSize","titleText","titleFiller","marginLeft","noData","lg","textAlign","Collectibles","selectedToken","setSelectedToken","sendNFTsModalOpen","setSendNFTsModalOpen","nftLoaded","nftAmount","ASSETS_EVENTS","NFT_AMOUNT","itemContent","index","nftAsset","backgroundImage","i","handleItemSend","slug","tokenId","SendModal","activeScreenType","isOpen","CollectiblesPage","nftApps","tags","infoBar","Grid"],"mappings":"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","file":"static/js/51.c3128842.chunk.js","sourcesContent":["import { GTM_EVENT } from 'src/utils/googleTagManager'\nimport { addEventCategory } from 'src/utils/events/utils'\n\nconst SAFE_APPS = {\n  OPEN_APP: {\n    event: GTM_EVENT.CLICK,\n    action: 'Open Safe App',\n  },\n  PIN: {\n    event: GTM_EVENT.CLICK,\n    action: 'Pin Safe App',\n  },\n  UNPIN: {\n    event: GTM_EVENT.CLICK,\n    action: 'Unpin Safe App',\n  },\n  SEARCH: {\n    event: GTM_EVENT.META,\n    action: 'Search for Safe App',\n  },\n  ADD_CUSTOM_APP: {\n    event: GTM_EVENT.META,\n    action: 'Add custom Safe App',\n  },\n  TRANSACTION_CONFIRMED: {\n    event: GTM_EVENT.META,\n    action: 'Transaction Confirmed',\n  },\n  TRANSACTION_REJECTED: {\n    event: GTM_EVENT.META,\n    action: 'Transaction Rejected',\n  },\n  LEGACY_API_CALL: {\n    event: GTM_EVENT.META,\n    action: 'Legacy API call',\n  },\n  SHARED_APP_LANDING: {\n    event: GTM_EVENT.META,\n    action: 'Shared App landing page visited',\n  },\n  SHARED_APP_CHAIN_ID: {\n    event: GTM_EVENT.META,\n    action: 'Shared App chainId',\n  },\n  SHARED_APP_OPEN_DEMO: {\n    event: GTM_EVENT.META,\n    action: 'Open demo safe from shared app',\n  },\n  SHARED_APP_OPEN_AFTER_SAFE_CREATION: {\n    event: GTM_EVENT.META,\n    action: 'Open shared app after Safe creation',\n  },\n}\n\nconst SAFE_APPS_CATEGORY = 'safe-apps'\nexport const SAFE_APPS_EVENTS = addEventCategory(SAFE_APPS, SAFE_APPS_CATEGORY)\n","import { useCallback, useMemo } from 'react'\n\nimport { SafeApp } from '../../types'\nimport { useCustomSafeApps } from './useCustomSafeApps'\nimport { useRemoteSafeApps } from './useRemoteSafeApps'\nimport { usePinnedSafeApps } from './usePinnedSafeApps'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\nimport { isSameUrl } from '../../utils'\n\ntype UseAppListReturnType = {\n  allApps: SafeApp[]\n  appList: SafeApp[]\n  customApps: SafeApp[]\n  pinnedSafeApps: SafeApp[]\n  togglePin: (app: SafeApp) => void\n  removeApp: (appId: string) => void\n  addCustomApp: (app: SafeApp) => void\n  isLoading: boolean\n  getSafeApp: (url: string) => SafeApp | undefined\n}\n\nconst useAppList = (): UseAppListReturnType => {\n  const { remoteSafeApps, status: remoteAppsFetchStatus } = useRemoteSafeApps()\n  const { customSafeApps, updateCustomSafeApps } = useCustomSafeApps()\n  const { pinnedSafeAppIds, updatePinnedSafeApps } = usePinnedSafeApps(remoteSafeApps, remoteAppsFetchStatus)\n  const remoteIsLoading = remoteAppsFetchStatus === FETCH_STATUS.LOADING\n\n  const allApps = useMemo(() => {\n    const allApps = [...remoteSafeApps, ...customSafeApps]\n    return allApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps, customSafeApps])\n\n  const appList = useMemo(() => {\n    return remoteSafeApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps])\n\n  const customApps = useMemo(\n    () =>\n      // Filter out custom apps that are now part of the production app list\n      customSafeApps\n        .filter((persistedApp) => !remoteSafeApps.some((app) => app.url === persistedApp.url))\n        .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())),\n    [customSafeApps, remoteSafeApps],\n  )\n\n  const pinnedSafeApps = useMemo(\n    () => appList.filter((app) => pinnedSafeAppIds.includes(app.id)),\n    [pinnedSafeAppIds, appList],\n  )\n\n  const addCustomApp = useCallback(\n    (app: SafeApp): void => {\n      const newList = [...customSafeApps, app]\n      updateCustomSafeApps(newList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const removeApp = useCallback(\n    (appId: string): void => {\n      const newPersistedList = customSafeApps.filter(({ id }) => id !== appId)\n      updateCustomSafeApps(newPersistedList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const togglePin = useCallback(\n    (app: SafeApp): void => {\n      const { id: appId, name: appName } = app\n      const newPinnedIds = [...pinnedSafeAppIds]\n      const isAppPinned = pinnedSafeAppIds.includes(appId)\n\n      if (isAppPinned) {\n        trackEvent({ ...SAFE_APPS_EVENTS.UNPIN, label: appName })\n        newPinnedIds.splice(newPinnedIds.indexOf(appId), 1)\n      } else {\n        trackEvent({ ...SAFE_APPS_EVENTS.PIN, label: appName })\n        newPinnedIds.push(appId)\n      }\n\n      updatePinnedSafeApps(newPinnedIds)\n    },\n    [updatePinnedSafeApps, pinnedSafeAppIds],\n  )\n\n  const getSafeApp = useCallback(\n    (url: string): SafeApp | undefined => {\n      const urlInstance = new URL(url)\n      const safeAppUrl = `${urlInstance.hostname}/${urlInstance.pathname}`\n\n      return appList.find((app: SafeApp) => {\n        const appUrlInstance = new URL(app?.url)\n\n        if (isSameUrl(`${appUrlInstance?.hostname}/${appUrlInstance?.pathname}`, safeAppUrl)) {\n          return app\n        }\n      })\n    },\n    [appList],\n  )\n\n  return {\n    allApps,\n    appList,\n    customApps,\n    pinnedSafeApps,\n    removeApp,\n    togglePin,\n    addCustomApp,\n    isLoading: remoteIsLoading,\n    getSafeApp,\n  }\n}\n\nexport { useAppList }\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { APPS_STORAGE_KEY, getAppInfoFromUrl, getEmptySafeApp } from '../../utils'\nimport { StoredSafeApp, SafeApp } from '../../types'\n\ntype ReturnType = {\n  customSafeApps: SafeApp[]\n  loaded: boolean\n  updateCustomSafeApps: (newCustomSafeApps: SafeApp[]) => void\n}\n\ntype CustomSafeApp = StoredSafeApp\n\n/*\n  This hook is used to manage the list of custom safe apps.\n  What it does:\n  1. Loads a list of custom safe apps from local storage\n  2. Does some backward compatibility checks (supported app networks, etc)\n  3. Tries to fetch the app info (manifest.json) from the app url\n*/\nconst useCustomSafeApps = (): ReturnType => {\n  const [customSafeApps, setCustomSafeApps] = useState<SafeApp[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  const updateCustomSafeApps = useCallback((newCustomSafeApps: SafeApp[]) => {\n    setCustomSafeApps(newCustomSafeApps)\n    saveToStorage(\n      APPS_STORAGE_KEY,\n      newCustomSafeApps.map(({ url }) => ({ url })),\n    )\n  }, [])\n\n  useEffect(() => {\n    const fetchAppCallback = (res: SafeApp, error = false) => {\n      setCustomSafeApps((prev) => {\n        const prevAppsCopy = [...prev]\n        const appIndex = prevAppsCopy.findIndex((a) => a.url === res.url)\n\n        if (error) {\n          prevAppsCopy.splice(appIndex, 1)\n        } else {\n          prevAppsCopy[appIndex] = { ...res, fetchStatus: FETCH_STATUS.SUCCESS }\n        }\n\n        return prevAppsCopy\n      })\n    }\n\n    const loadCustomApps = () => {\n      // recover apps from storage (third-party apps added by the user)\n      const storageAppList = loadFromStorage<CustomSafeApp[]>(APPS_STORAGE_KEY) || []\n      // if the app does not expose supported networks, include them. (backward compatible)\n      const serializedApps = storageAppList.map(\n        (app): SafeApp => ({\n          ...getEmptySafeApp(),\n          ...app,\n          url: app.url.trim(),\n          id: app.url.trim(),\n          custom: true,\n        }),\n      )\n      setCustomSafeApps(serializedApps)\n      setLoaded(true)\n\n      serializedApps.forEach((app) => {\n        getAppInfoFromUrl(app.url)\n          .then((appFromUrl) => {\n            fetchAppCallback({ ...appFromUrl, custom: true })\n          })\n          .catch((err) => {\n            fetchAppCallback(app, true)\n            logError(Errors._900, `${app.url}, ${err.message}`)\n          })\n      })\n    }\n\n    loadCustomApps()\n  }, [])\n\n  return { customSafeApps, loaded, updateCustomSafeApps }\n}\n\nexport { useCustomSafeApps }\n","import { useState, useEffect } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { PINNED_SAFE_APP_IDS } from '../../utils'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\n\ntype ReturnType = {\n  pinnedSafeAppIds: string[]\n  loaded: boolean\n  updatePinnedSafeApps: (newPinnedSafeAppIds: string[]) => void\n}\n\nconst usePinnedSafeApps = (remoteSafeApps: SafeApp[], remoteAppsFetchStatus: FETCH_STATUS): ReturnType => {\n  const [pinnedSafeAppIds, updatePinnedSafeApps] = useState<string[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    const loadPinnedAppIds = () => {\n      const pinnedAppIds = loadFromStorage<string[]>(PINNED_SAFE_APP_IDS) || []\n\n      const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n      if (isRemoteSafeAppsListLoaded) {\n        // we remove pinned Safe Apps that are not included in the remote list, see #2847\n        const filteredPinnedAppsIds = pinnedAppIds.filter((pinnedAppId) =>\n          remoteSafeApps.some((app) => app.id === pinnedAppId),\n        )\n        updatePinnedSafeApps(filteredPinnedAppsIds)\n        setLoaded(true)\n      }\n    }\n\n    loadPinnedAppIds()\n  }, [remoteAppsFetchStatus, remoteSafeApps])\n\n  // we only update pinned apps in the localStorage when remote Apps are loaded\n  useEffect(() => {\n    const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n    if (isRemoteSafeAppsListLoaded) {\n      saveToStorage(PINNED_SAFE_APP_IDS, pinnedSafeAppIds)\n    }\n  }, [pinnedSafeAppIds, remoteAppsFetchStatus])\n\n  return { pinnedSafeAppIds, loaded, updatePinnedSafeApps }\n}\n\nexport { usePinnedSafeApps }\n","import { getSafeApps, SafeAppData } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { _getChainId } from 'src/config'\n\nexport const fetchSafeAppsList = async (): Promise<SafeAppData[]> => {\n  return getSafeApps(_getChainId(), {\n    client_url: window.location.origin,\n  })\n}\n","import { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { SafeAppData } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { showNotification } from 'src/logic/notifications/store/notifications'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\nimport { fetchSafeAppsList } from 'src/logic/safe/api/fetchSafeApps'\n\ntype ReturnType = {\n  remoteSafeApps: SafeApp[]\n  status: FETCH_STATUS\n}\n\n// Memoize the fetch request so that simulteneous calls\n// to this function return the same promise\nlet fetchPromise: Promise<SafeAppData[]> | null = null\nconst memoizedFetchSafeApps = (): Promise<SafeAppData[]> => {\n  if (!fetchPromise) {\n    fetchPromise = fetchSafeAppsList()\n  }\n  fetchPromise.finally(() => (fetchPromise = null))\n  return fetchPromise\n}\n\nconst useRemoteSafeApps = (): ReturnType => {\n  const [remoteSafeApps, setRemoteSafeApps] = useState<SafeApp[]>([])\n  const [status, setStatus] = useState<FETCH_STATUS>(FETCH_STATUS.NOT_ASKED)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const loadAppsList = async () => {\n      setStatus(FETCH_STATUS.LOADING)\n      try {\n        const result = await memoizedFetchSafeApps()\n\n        if (result?.length) {\n          setRemoteSafeApps(result.map((app) => ({ ...app, fetchStatus: FETCH_STATUS.SUCCESS, id: String(app.id) })))\n          setStatus(FETCH_STATUS.SUCCESS)\n        } else {\n          throw new Error('Empty apps array 🤬')\n        }\n      } catch (e) {\n        setStatus(FETCH_STATUS.ERROR)\n        logError(Errors._902, e.message)\n        dispatch(showNotification(NOTIFICATIONS.SAFE_APPS_FETCH_ERROR_MSG))\n      }\n    }\n\n    loadAppsList()\n  }, [dispatch])\n\n  return { remoteSafeApps, status }\n}\n\nexport { useRemoteSafeApps }\n","import { createSelector } from 'reselect'\nimport { NFTAsset, NFTAssets, NFTTokens, NFTTokensStore } from 'src/logic/collectibles/sources/collectibles.d'\n\nimport { AppReduxState } from 'src/store'\nimport { NFT_ASSETS_REDUCER_ID, NFT_TOKENS_REDUCER_ID } from 'src/logic/collectibles/store/reducer/collectibles'\nexport const nftAssets = (state: AppReduxState): NFTAssets => state[NFT_ASSETS_REDUCER_ID]\nexport const nftTokens = (state: AppReduxState): NFTTokensStore => state[NFT_TOKENS_REDUCER_ID]\n\nexport const nftAssetsSelector = createSelector(nftAssets, (assets) => assets)\n\nexport const nftTokensSelector = createSelector(nftTokens, (tokens) => tokens.items)\n\nexport const nftLoadedSelector = createSelector(nftTokens, (tokens) => tokens.loaded)\n\nconst nftAssetsToListSelector = createSelector(nftAssets, (assets): NFTAsset[] => {\n  return assets ? Object.values(assets) : []\n})\n\nconst nftAssetsAddressFromNftTokensSelector = createSelector(nftTokensSelector, (userNftTokens): string[] => {\n  const addresses = userNftTokens.map((nftToken) => nftToken.assetAddress)\n  const uniqueAddresses = new Set(addresses)\n  return Array.from(uniqueAddresses)\n})\n\nexport const orderedNFTAssets = createSelector(\n  nftTokensSelector,\n  (userNftTokens): NFTTokens => userNftTokens.sort((a, b) => a.name.localeCompare(b.name)),\n)\n\nexport const nftAssetsFromNftTokensSelector = createSelector(\n  nftAssetsToListSelector,\n  nftAssetsAddressFromNftTokensSelector,\n  (nftAssets, nftAssetsFromNftTokens): NFTAsset[] => {\n    return nftAssets\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter(({ address }) => nftAssetsFromNftTokens.includes(address))\n  },\n)\n","import styled, { keyframes } from 'styled-components'\n\nexport const gradientSK = keyframes`\n0% {\n  background-position: 0% 54%;\n}\n50% {\n  background-position: 100% 47%;\n}\n100% {\n  background-position: 0% 54%;\n}\n`\n\nexport const SafeAppLogoSK = styled.div`\n  height: ${(props: { size }) => (props.size === 'lg' ? '112px' : '50px')};\n  width: ${(props: { size }) => (props.size === 'lg' ? '112px' : '50px')};\n  border-radius: 50%;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n\nexport const SafeAppTitleSK = styled.div`\n  height: 18px;\n  width: 160px;\n  margin: 8px 0;\n\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n\nexport const SafeAppDescriptionSK = styled.div`\n  height: 12px;\n  width: 240px;\n  margin: 2px 0;\n\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n","import { SyntheticEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Card, Title, Text, Icon } from '@gnosis.pm/safe-react-components'\n\nimport { generateSafeRoute, getShareSafeAppUrl, SAFE_ROUTES } from 'src/routes/routes'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport fallbackSafeAppLogoSvg from 'src/assets/icons/apps.svg'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { showNotification } from 'src/logic/notifications/store/notifications'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { copyToClipboard } from 'src/utils/clipboard'\nimport { getShortName } from 'src/config'\nimport { SafeAppDescriptionSK, SafeAppLogoSK, SafeAppTitleSK } from './SafeAppSkeleton'\nimport { primary200, primary300 } from 'src/theme/variables'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\ntype SafeAppCardSize = 'md' | 'lg'\n\ntype SafeAppCardProps = {\n  safeApp: SafeApp\n  size: SafeAppCardSize\n  togglePin: (app: SafeApp) => void\n  isPinned?: boolean\n  isCustomSafeApp?: boolean\n  onRemove?: (app: SafeApp) => void\n}\n\nconst SafeAppCard = ({\n  safeApp,\n  size,\n  togglePin,\n  isPinned,\n  isCustomSafeApp,\n  onRemove,\n}: SafeAppCardProps): React.ReactElement => {\n  const chainId = useSelector(currentChainId)\n  const dispatch = useDispatch()\n\n  const { safeAddress } = useSafeAddress()\n  const appsPath = generateSafeRoute(SAFE_ROUTES.APPS, {\n    shortName: getShortName(),\n    safeAddress,\n  })\n  const openSafeAppLink = `${appsPath}?appUrl=${encodeURI(safeApp.url)}`\n\n  const shareSafeApp = () => {\n    const shareSafeAppUrl = getShareSafeAppUrl(safeApp.url, chainId)\n    copyToClipboard(shareSafeAppUrl)\n    dispatch(showNotification(NOTIFICATIONS.SHARE_SAFE_APP_URL_COPIED))\n  }\n\n  const isSafeAppLoading = safeApp.fetchStatus === FETCH_STATUS.LOADING\n\n  if (isSafeAppLoading) {\n    return (\n      <SafeAppContainer size={size}>\n        <StyledAppCard size={size}>\n          <LogoContainer size={size}>\n            <SafeAppLogoSK size={size} />\n          </LogoContainer>\n          <DescriptionContainer size={size}>\n            <SafeAppTitleSK />\n            <SafeAppDescriptionSK />\n            <SafeAppDescriptionSK />\n          </DescriptionContainer>\n        </StyledAppCard>\n      </SafeAppContainer>\n    )\n  }\n\n  return (\n    <SafeAppContainer size={size}>\n      <StyledLink to={openSafeAppLink} aria-label={`open ${safeApp.name} Safe App`}>\n        <StyledAppCard size={size}>\n          {/* Safe App Logo */}\n          <LogoContainer size={size}>\n            <SafeAppLogo\n              size={size}\n              src={safeApp.iconUrl}\n              alt={`${safeApp.name || 'Safe App'} Logo`}\n              onError={setSafeAppLogoFallback}\n            />\n          </LogoContainer>\n\n          {/* Safe App Description */}\n          <DescriptionContainer size={size}>\n            <SafeAppTitle size=\"xs\">{safeApp.name}</SafeAppTitle>\n            <SafeAppDescription size=\"lg\" color=\"inputFilled\">\n              {safeApp.description}\n            </SafeAppDescription>\n          </DescriptionContainer>\n\n          {/* Safe App Actions */}\n          <ActionsContainer onClick={(e) => e.preventDefault()}>\n            {/* Share Safe App button */}\n            <IconBtn onClick={shareSafeApp} aria-label={`copy ${safeApp.name} Safe App share link to clipboard`}>\n              <Icon size=\"md\" type=\"share\" tooltip=\"Copy share link\" />\n            </IconBtn>\n\n            {/* Pin & Unpin Safe App button */}\n            {!isCustomSafeApp && (\n              <IconBtn\n                onClick={() => togglePin(safeApp)}\n                aria-label={`${isPinned ? 'Unpin' : 'Pin'} ${safeApp.name} Safe App`}\n              >\n                {isPinned ? (\n                  <PinnedIcon size=\"md\" type=\"bookmarkFilled\" color=\"primary\" tooltip=\"Unpin from the Safe Apps\" />\n                ) : (\n                  <PinnedIcon size=\"md\" type=\"bookmark\" tooltip=\"Pin from the Safe Apps\" />\n                )}\n              </IconBtn>\n            )}\n\n            {/* Remove custom Safe App button */}\n            {isCustomSafeApp && (\n              <IconBtn onClick={() => onRemove?.(safeApp)} aria-label={`Remove ${safeApp.name} custom Safe App`}>\n                <Icon size=\"md\" type=\"delete\" color=\"error\" tooltip=\"Remove Custom Safe App\" />\n              </IconBtn>\n            )}\n          </ActionsContainer>\n        </StyledAppCard>\n      </StyledLink>\n    </SafeAppContainer>\n  )\n}\n\nexport default SafeAppCard\n\nconst setSafeAppLogoFallback = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = fallbackSafeAppLogoSvg\n}\n\nexport const SAFE_APP_CARD_HEIGHT = 190\nexport const SAFE_APP_CARD_PADDING = 16\n\nconst SafeAppContainer = styled(motion.div).attrs({\n  layout: true,\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n})`\n  position: relative;\n  display: flex;\n  height: ${SAFE_APP_CARD_HEIGHT}px;\n\n  grid-column: span ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '2' : '1')};\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex: 1 0;\n  height: ${SAFE_APP_CARD_HEIGHT}px;\n  text-decoration: none;\n`\n\nconst StyledAppCard = styled(Card)`\n  flex: 1 1 100%;\n  padding: ${SAFE_APP_CARD_PADDING}px;\n  display: flex;\n  flex-direction: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? 'row' : 'column')};\n  box-shadow: none;\n  border: 2px solid transparent;\n\n  transition: all 0.3s ease-in-out 0s;\n  transition-property: border-color, background-color;\n\n  :hover {\n    background-color: ${primary200};\n    border: 2px solid ${primary300};\n  }\n`\n\nconst LogoContainer = styled.div`\n  flex: 0 0;\n  flex-basis: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '50%' : 'auto')};\n\n  display: flex;\n  justify-content: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? 'center' : 'start')};\n  align-items: center;\n`\n\nconst SafeAppLogo = styled.img`\n  height: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '112px' : '50px')};\n  width: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '112px' : '50px')};\n  object-fit: contain;\n`\n\nconst DescriptionContainer = styled.div`\n  flex: 0 0;\n\n  flex-basis: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '50%' : 'auto')};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst SafeAppTitle = styled(Title)`\n  margin: 8px 0px;\n  font-size: 16px;\n  line-height: 22px;\n  font-weight: bold;\n  color: initial;\n`\n\nconst SafeAppDescription = styled(Text)`\n  margin: 0;\n  line-height: 22px;\n\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nconst ActionsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  margin: 16px 12px;\n`\n\nconst IconBtn = styled(IconButton)`\n  padding: 8px;\n\n  && svg {\n    width: 16px;\n    height: 16px;\n  }\n`\nconst PinnedIcon = styled(Icon)`\n  padding-left: 2px;\n`\n","export const copyToClipboard = (text: string): void => {\n  const range = document.createRange()\n  range.selectNodeContents(document.body)\n  document?.getSelection()?.addRange(range)\n\n  function listener(e: ClipboardEvent) {\n    e.clipboardData?.setData('text/plain', text)\n    e.preventDefault()\n  }\n  document.addEventListener('copy', listener)\n  document.execCommand('copy')\n  document.removeEventListener('copy', listener)\n\n  document?.getSelection()?.removeAllRanges()\n}\n","import { makeStyles } from '@material-ui/core/styles'\n// import CallMade from '@material-ui/icons/CallMade'\nimport cn from 'classnames'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Button from 'src/components/layout/Button'\nimport { NFTToken } from 'src/logic/collectibles/sources/collectibles'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { fontColor, sm, xs } from 'src/theme/variables'\n\nconst useStyles = makeStyles({\n  item: {\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px 0 rgba(33, 48, 77, 0.10)',\n    boxSizing: 'border-box',\n    cursor: (props) => (props.granted ? 'pointer' : 'default'),\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '1',\n    minHeight: '250px',\n    minWidth: '0',\n    position: 'relative',\n\n    '&:hover .showOnHover': {\n      opacity: '1',\n    },\n    '&:active .showOnHover': {\n      opacity: '1',\n    },\n  },\n  mainContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '1',\n    position: 'relative',\n    zIndex: '1',\n  },\n  extraContent: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 243, 226, 0.6)',\n    bottom: '0',\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'center',\n    left: '0',\n    opacity: '0',\n    position: 'absolute',\n    right: '0',\n    top: '0',\n    transition: 'opacity 0.15s ease-out',\n    zIndex: '5',\n  },\n  image: {\n    borderRadius: '8px',\n    maxWidth: '200px',\n    maxHeight: '200px',\n    width: '100%',\n    height: '100%',\n    objectFit: 'contain',\n    margin: '12px 12px 0',\n    alignSelf: 'center',\n  },\n  textContainer: {\n    boxSizing: 'border-box',\n    color: fontColor,\n    flexShrink: '0',\n    fontSize: '12px',\n    lineHeight: '1.4',\n    padding: '15px 22px 20px',\n  },\n  title: {\n    fontWeight: 'bold',\n    margin: '0',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  text: {\n    margin: '0',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  buttonIcon: {\n    fontSize: 16,\n    marginRight: sm,\n  },\n  sendButton: {\n    borderRadius: xs,\n    minWidth: '85px',\n\n    '& > span': {\n      fontSize: '14px',\n    },\n  },\n} as any)\n\nconst Item = ({ data, onSend }: { data: NFTToken; onSend: (nftToken: NFTToken) => void }): ReactElement => {\n  const granted = useSelector(grantedSelector)\n  const classes = useStyles({ granted })\n\n  return (\n    <div className={classes.item}>\n      <div className={classes.mainContent}>\n        <img src={data.image} className={classes.image} loading=\"lazy\" />\n        <div className={classes.textContainer}>\n          {data.name && (\n            <h3 className={classes.title} title={data.name}>\n              {data.name}\n            </h3>\n          )}\n          {data.description && (\n            <p className={classes.text} title={data.description}>\n              {data.description}\n            </p>\n          )}\n        </div>\n      </div>\n      {granted && (\n        <div className={cn(classes.extraContent, 'showOnHover')}>\n          <Button className={classes.sendButton} color=\"primary\" onClick={onSend} size=\"small\" variant=\"contained\">\n            {/* <CallMade alt=\"Send\" className={classes.buttonIcon} />  */}\n            Send\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Item\n","import { useEffect, ReactElement } from 'react'\nimport { Virtuoso } from 'react-virtuoso'\n\n// The ResizeObserver cannot deliver all observations in one animation frame.\n// The author of the `ResizeObserver` spec assures that it can be safely ignored:\n// https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded#comment86691361_49384120\n\nconst ignoreResizeObserverErrors = (e: ErrorEvent) => {\n  const RESIZE_OBSERVER_ERRORS = [\n    'ResizeObserver loop completed with undelivered notifications.',\n    'ResizeObserver loop limit exceeded',\n  ]\n  if (RESIZE_OBSERVER_ERRORS.includes(e.message)) {\n    e.stopImmediatePropagation()\n  }\n}\n\nconst VirtualizedList: typeof Virtuoso = ({ children, style, ...props }): ReactElement => {\n  useEffect(() => {\n    window.addEventListener('error', ignoreResizeObserverErrors)\n    return () => window.removeEventListener('error', ignoreResizeObserverErrors)\n  }, [])\n\n  return (\n    <Virtuoso\n      style={{\n        height: 'calc(100% - 54px)', // Remove breadcrumb height\n        ...style,\n      }}\n      {...props}\n    >\n      {children}\n    </Virtuoso>\n  )\n}\n\nexport default VirtualizedList\n","import MuiAlert from '@material-ui/lab/Alert'\nimport useCachedState from 'src/utils/storage/useCachedState'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { ReactElement } from 'react'\n\ntype InfoAlertProps = {\n  title: string\n  text: string\n  id: string\n}\n\nconst InfoAlert = (props: InfoAlertProps): ReactElement | null => {\n  const [isClosed, setClosed] = useCachedState<boolean>(`${props.id}Closed`)\n\n  return isClosed ? null : (\n    <MuiAlert severity=\"info\" onClose={() => setClosed(true)} style={{ margin: '0 20px 26px 0' }}>\n      <Paragraph style={{ fontWeight: 'bold', margin: '0 0 0.5em' }}>{props.title}</Paragraph>\n\n      <Paragraph noMargin>{props.text}</Paragraph>\n    </MuiAlert>\n  )\n}\n\nexport default InfoAlert\n","import { Fragment, ReactNode, useEffect, useMemo, useState } from 'react'\nimport Card from '@material-ui/core/Card'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { useSelector } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nimport Item from './components/Item'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport {\n  nftAssetsFromNftTokensSelector,\n  nftLoadedSelector,\n  orderedNFTAssets,\n} from 'src/logic/collectibles/store/selectors'\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\nimport { fontColor, lg, screenSm, screenXs } from 'src/theme/variables'\nimport { NFTToken } from 'src/logic/collectibles/sources/collectibles.d'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { ASSETS_EVENTS } from 'src/utils/events/assets'\nimport VirtualizedList from 'src/components/VirtualizedList'\nimport InfoAlert from 'src/components/InfoAlert'\nimport SafeAppCard from '../../Apps/components/SafeAppCard/SafeAppCard'\nimport { useAppList } from '../../Apps/hooks/appList/useAppList'\n\nconst useStyles = makeStyles(\n  createStyles({\n    cardInner: {\n      boxSizing: 'border-box',\n      maxWidth: '100%',\n      padding: '52px 54px',\n    },\n    cardOuter: {\n      boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    },\n    gridRow: {\n      boxSizing: 'border-box',\n      columnGap: '30px',\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      marginBottom: '45px',\n      maxWidth: '100%',\n      rowGap: '45px',\n\n      '&:last-child': {\n        marginBottom: '0',\n      },\n\n      [`@media (min-width: ${screenXs}px)`]: {\n        gridTemplateColumns: '1fr 1fr',\n      },\n\n      [`@media (min-width: ${screenSm}px)`]: {\n        gridTemplateColumns: '1fr 1fr 1fr 1fr',\n      },\n    },\n    title: {\n      alignItems: 'center',\n      display: 'flex',\n      margin: '18px',\n    },\n    titleImg: {\n      backgroundPosition: '50% 50%',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'contain',\n      borderRadius: '50%',\n      height: '45px',\n      margin: '0 10px 0 0',\n      width: '45px',\n    },\n    titleText: {\n      color: fontColor,\n      fontSize: '18px',\n      fontWeight: 'normal',\n      lineHeight: '1.2',\n      margin: '0',\n    },\n    titleFiller: {\n      backgroundColor: '#e8e7e6',\n      flexGrow: 1,\n      height: '2px',\n      marginLeft: '40px',\n    },\n    noData: {\n      fontSize: lg,\n      textAlign: 'center',\n    },\n  }),\n)\n\nconst Collectibles = ({ children }: { children: ReactNode }): React.ReactElement => {\n  const classes = useStyles()\n  const [selectedToken, setSelectedToken] = useState<NFTToken | undefined>()\n  const [sendNFTsModalOpen, setSendNFTsModalOpen] = useState(false)\n\n  const nftLoaded = useSelector(nftLoadedSelector)\n  const nftTokens = useSelector(orderedNFTAssets)\n  const nftAssetsFromNftTokens = useSelector(nftAssetsFromNftTokensSelector)\n\n  const nftAmount = useMemo(() => nftTokens.length, [nftTokens])\n  useEffect(() => {\n    trackEvent({ ...ASSETS_EVENTS.NFT_AMOUNT, label: nftAmount })\n  }, [nftAmount])\n\n  const handleItemSend = (nftToken: NFTToken) => {\n    setSelectedToken(nftToken)\n    setSendNFTsModalOpen(true)\n  }\n\n  if (nftAssetsFromNftTokens.length === 0) {\n    return (\n      <Fragment>\n        {children}\n        <Card className={classes.cardOuter}>\n          <div className={classes.cardInner}>\n            <Paragraph className={classes.noData}>{nftLoaded ? 'No NFTs available' : 'Loading NFTs...'}</Paragraph>\n          </div>\n        </Card>\n      </Fragment>\n    )\n  }\n\n  return (\n    <>\n      <VirtualizedList\n        data={nftAssetsFromNftTokens}\n        itemContent={(index, nftAsset) => {\n          // Larger collectible lists can cause this to be initially undefined\n          if (!nftAsset) {\n            return null\n          }\n\n          return (\n            <Fragment key={nftAsset.slug}>\n              {index === 0 && children}\n\n              <div className={classes.title}>\n                <div className={classes.titleImg} style={{ backgroundImage: `url(${nftAsset.image || ''})` }} />\n                <h2 className={classes.titleText}>{nftAsset.name}</h2>\n                <div className={classes.titleFiller} />\n              </div>\n              <div className={classes.gridRow}>\n                {nftTokens\n                  .filter(({ assetAddress }) => nftAsset.address === assetAddress)\n                  .map((nftToken, i) => (\n                    <Item\n                      data={nftToken}\n                      key={`${nftAsset.slug}_${nftToken.tokenId}_${i}`}\n                      onSend={() => handleItemSend(nftToken)}\n                    />\n                  ))}\n              </div>\n            </Fragment>\n          )\n        }}\n      />\n      <SendModal\n        activeScreenType=\"sendCollectible\"\n        isOpen={sendNFTsModalOpen}\n        onClose={() => setSendNFTsModalOpen(false)}\n        selectedToken={selectedToken}\n      />\n    </>\n  )\n}\n\nconst CollectiblesPage = (): React.ReactElement => {\n  const NFT_APPS_TAG = 'nft'\n  const { allApps, pinnedSafeApps, togglePin } = useAppList()\n  const nftApps = useMemo(() => allApps.filter((app) => app.tags?.includes(NFT_APPS_TAG)), [allApps])\n\n  const infoBar = (\n    <InfoAlert\n      id=\"collectiblesInfo\"\n      title=\"Use Safe Apps to view your NFT portfolio\"\n      text=\"Get the most optimal experience with Safe Apps. View your collections, buy or sell NFTs, and more.\"\n    />\n  )\n\n  return (\n    <Collectibles>\n      {nftApps.length > 0 && (\n        <>\n          {infoBar}\n\n          <h3>NFT apps</h3>\n\n          <Grid style={{ marginBottom: '30px' }}>\n            {nftApps.map((app) => (\n              <Grid item key={app.id} xs={4}>\n                <SafeAppCard\n                  safeApp={app}\n                  size=\"md\"\n                  togglePin={togglePin}\n                  isPinned={pinnedSafeApps.some(({ id }) => id === app.id)}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </>\n      )}\n\n      <h3>NFTs</h3>\n    </Collectibles>\n  )\n}\n\nexport default CollectiblesPage\n"],"sourceRoot":""}