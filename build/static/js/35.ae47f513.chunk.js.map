{"version":3,"sources":["utils/events/safeApps.ts","components/NetworkLabel/NetworkLabel.tsx","routes/safe/components/Apps/hooks/appList/useAppList.ts","routes/safe/components/Apps/hooks/appList/useCustomSafeApps.ts","routes/safe/components/Apps/hooks/appList/usePinnedSafeApps.ts","logic/safe/api/fetchSafeApps.ts","routes/safe/components/Apps/hooks/appList/useRemoteSafeApps.ts","logic/collectibles/store/selectors/index.ts","components/layout/Page/index.tsx","components/layout/Page/index.module.scss","routes/safe/components/Apps/components/SafeAppCard/SafeAppSkeleton.tsx","routes/safe/components/Apps/components/SafeAppCard/SafeAppCard.tsx","utils/clipboard.ts","routes/safe/components/Apps/trackAppUsageCount.ts","../node_modules/@material-ui/lab/Skeleton/Skeleton.js","components/Dashboard/PendingTxs/PendingTxListItem.tsx","components/Dashboard/styled.tsx","components/Dashboard/PendingTxs/PendingTxsList.tsx","components/Dashboard/Overview/Overview.tsx","assets/icons/explore.svg","components/Dashboard/FeaturedApps/FeaturedApps.tsx","components/Dashboard/SafeApps/index.tsx","components/Dashboard/MobileAppBanner/index.tsx","components/Dashboard/index.tsx","routes/Home/index.tsx"],"names":["SAFE_APPS","OPEN_APP","event","GTM_EVENT","CLICK","action","PIN","UNPIN","SEARCH","META","ADD_CUSTOM_APP","TRANSACTION_CONFIRMED","TRANSACTION_REJECTED","LEGACY_API_CALL","SHARED_APP_LANDING","SHARED_APP_CHAIN_ID","SHARED_APP_OPEN_DEMO","SHARED_APP_OPEN_AFTER_SAFE_CREATION","SAFE_APPS_EVENTS","addEventCategory","NetworkLabel","props","networkInfo","onClick","flexGrow","selectedNetwork","getChainInfo","StyledLabel","theme","chainName","styled","span","extraSmallFontSize","xs","sm","backgroundColor","border","textColor","fontColor","useAppList","useRemoteSafeApps","remoteSafeApps","remoteAppsFetchStatus","status","useState","customSafeApps","setCustomSafeApps","loaded","setLoaded","updateCustomSafeApps","useCallback","newCustomSafeApps","saveToStorage","APPS_STORAGE_KEY","map","url","useEffect","fetchAppCallback","res","error","prev","prevAppsCopy","appIndex","findIndex","a","splice","fetchStatus","FETCH_STATUS","SUCCESS","serializedApps","loadFromStorage","app","getEmptySafeApp","trim","id","custom","forEach","getAppInfoFromUrl","then","appFromUrl","catch","err","logError","Errors","_900","message","loadCustomApps","useCustomSafeApps","pinnedSafeAppIds","updatePinnedSafeApps","pinnedAppIds","PINNED_SAFE_APP_IDS","filteredPinnedAppsIds","filter","pinnedAppId","some","loadPinnedAppIds","usePinnedSafeApps","remoteIsLoading","LOADING","allApps","useMemo","sort","b","name","toLowerCase","localeCompare","appList","customApps","persistedApp","pinnedSafeApps","includes","addCustomApp","newList","removeApp","appId","newPersistedList","togglePin","appName","newPinnedIds","trackEvent","label","indexOf","push","getSafeApp","urlInstance","URL","safeAppUrl","hostname","pathname","find","appUrlInstance","isSameUrl","isLoading","fetchSafeAppsList","getSafeApps","_getChainId","client_url","window","location","origin","fetchPromise","setRemoteSafeApps","NOT_ASKED","setStatus","dispatch","useDispatch","loadAppsList","finally","result","length","String","Error","ERROR","_902","showNotification","NOTIFICATIONS","SAFE_APPS_FETCH_ERROR_MSG","nftAssets","state","NFT_ASSETS_REDUCER_ID","nftTokens","NFT_TOKENS_REDUCER_ID","nftAssetsSelector","createSelector","assets","nftTokensSelector","tokens","items","nftLoadedSelector","nftAssetsToListSelector","Object","values","nftAssetsAddressFromNftTokensSelector","userNftTokens","addresses","nftToken","assetAddress","uniqueAddresses","Set","Array","from","orderedNFTAssets","nftAssetsFromNftTokensSelector","nftAssetsFromNftTokens","address","cx","classNames","bind","styles","Page","align","children","overflow","className","page","module","exports","gradientSK","keyframes","SafeAppLogoSK","div","size","SafeAppTitleSK","SafeAppDescriptionSK","setSafeAppLogoFallback","SafeAppCard","safeApp","isPinned","isCustomSafeApp","onRemove","chainId","useSelector","currentChainId","safeAddress","useSafeAddress","appsPath","generateSafeRoute","SAFE_ROUTES","APPS","shortName","getShortName","openSafeAppLink","encodeURI","SafeAppContainer","StyledAppCard","LogoContainer","DescriptionContainer","StyledLink","to","SafeAppLogo","src","iconUrl","alt","onError","SafeAppTitle","SafeAppDescription","color","description","ActionsContainer","e","preventDefault","IconBtn","text","range","document","createRange","listener","clipboardData","setData","selectNodeContents","body","getSelection","addRange","addEventListener","execCommand","removeEventListener","removeAllRanges","copyToClipboard","getShareSafeAppUrl","SHARE_SAFE_APP_URL_COPIED","type","tooltip","PinnedIcon","currentTarget","onerror","fallbackSafeAppLogoSvg","SAFE_APP_CARD_HEIGHT","SAFE_APP_CARD_PADDING","motion","attrs","layout","initial","opacity","animate","exit","Link","Card","primary200","primary300","img","Title","Text","IconButton","Icon","APPS_DASHBOARD","getAppsUsageData","local","getItem","trackSafeAppOpenCount","trackData","currentOpenCount","openCount","currentTxCount","txCount","setItem","timestamp","Date","now","trackSafeAppTxCount","rankSafeApps","apps","appsWithScore","computeTrackedSafeAppsScore","entries","val","minVal","maxVal","newMin","scoredApps","sortedByTimestamp","idx","timeMultiplier","_interopRequireWildcard","require","_interopRequireDefault","defineProperty","value","default","_extends2","_objectWithoutProperties2","React","_clsx","_styles","root","display","alpha","palette","primary","height","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","animation","wave","position","background","concat","hover","bottom","left","right","top","withChildren","visibility","fitContent","maxWidth","heightAuto","Skeleton","forwardRef","ref","_props$animation","classes","_props$component","component","Component","_props$variant","variant","width","other","hasChildren","Boolean","createElement","style","_default","withStyles","TransactionToConfirm","colors","white","grey400","StyledConfirmationsCount","boldFont","smallFontSize","TxConfirmations","PendingTx","transaction","info","useAssetInfo","txInfo","useTransactionType","toAddress","getTxTo","toInfo","useKnownAddress","as","isMultisigExecutionInfo","executionInfo","nonce","CustomIconText","EMPTY_DATA","icon","logoUri","undefined","iconUrlFallback","fallbackIcon","Spacer","confirmationsSubmitted","confirmationsRequired","WidgetContainer","section","DashboardTitle","h1","black500","extraLargeFontSize","WidgetTitle","h2","largeFontSize","WidgetBody","lg","ViewAllLink","SkeletonWrapper","StyledList","StyledWidgetTitle","EmptyState","Box","alignItems","justifyContent","flexDirection","gridGap","Img","NoTransactionsImage","PendingTxsList","currentSafe","queueTxns","pendingTransactions","getChainById","TRANSACTIONS_QUEUE","totalQueuedTxs","setTotalQueuedTxs","queuedTxsToDisplay","allQueuedTransactions","next","queued","group","reduce","acc","tx","slice","LoadingState","keys","key","ResultState","PendingTxListItem","IdenticonContainer","md","StyledText","NetworkLabelContainer","ValueSkeleton","SkeletonOverview","Grid","container","item","mb","strong","Overview","currentSafeWithNames","owners","threshold","balances","currentSafeLoaded","nftLoaded","assetsLink","ASSETS_BALANCES","nftsLink","ASSETS_BALANCES_COLLECTIBLES","tokenCount","token","tokenBalance","Threshold","PrefixedEthHashInfo","hash","textSize","Button","FEATURED_APPS_TAG","StyledImage","StyledGrid","StyledGridItem","FeaturedApps","featuredApps","tags","routesSlug","getSafeAppUrl","spacing","StyledExploreBlock","ExploreIcon","screenMd","screenSm","SafeApps","displayedApps","rankedSafeAppIds","featuredSafeAppIds","nonFeaturedApps","nonRankedApps","topRankedSafeApps","sortedApp","randomApps","sampleSize","uniqBy","useRankedApps","allAppsUrl","generatePath","GENERIC_APPS_ROUTE","pinnedSafeApp","StyledContainer","StyledBanner","$count","StyledAppstoreButton","StyledCloseButton","button","StyledBackButton","StyledButtons","UserSurvey","onDone","onReply","setTimeout","MOBILE_APP_EVENTS","alreadyUse","notInterested","MobileAppBanner","count","setCount","closing","setClosing","useCachedState","closed","setClosed","prevCount","dashboardBannerClick","onBack","onClose","dashboardBannerClose","AppstoreButton","placement","Dashboard","Home","pb"],"mappings":"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","file":"static/js/35.ae47f513.chunk.js","sourcesContent":["import { GTM_EVENT } from 'src/utils/googleTagManager'\nimport { addEventCategory } from 'src/utils/events/utils'\n\nconst SAFE_APPS = {\n  OPEN_APP: {\n    event: GTM_EVENT.CLICK,\n    action: 'Open Safe App',\n  },\n  PIN: {\n    event: GTM_EVENT.CLICK,\n    action: 'Pin Safe App',\n  },\n  UNPIN: {\n    event: GTM_EVENT.CLICK,\n    action: 'Unpin Safe App',\n  },\n  SEARCH: {\n    event: GTM_EVENT.META,\n    action: 'Search for Safe App',\n  },\n  ADD_CUSTOM_APP: {\n    event: GTM_EVENT.META,\n    action: 'Add custom Safe App',\n  },\n  TRANSACTION_CONFIRMED: {\n    event: GTM_EVENT.META,\n    action: 'Transaction Confirmed',\n  },\n  TRANSACTION_REJECTED: {\n    event: GTM_EVENT.META,\n    action: 'Transaction Rejected',\n  },\n  LEGACY_API_CALL: {\n    event: GTM_EVENT.META,\n    action: 'Legacy API call',\n  },\n  SHARED_APP_LANDING: {\n    event: GTM_EVENT.META,\n    action: 'Shared App landing page visited',\n  },\n  SHARED_APP_CHAIN_ID: {\n    event: GTM_EVENT.META,\n    action: 'Shared App chainId',\n  },\n  SHARED_APP_OPEN_DEMO: {\n    event: GTM_EVENT.META,\n    action: 'Open demo safe from shared app',\n  },\n  SHARED_APP_OPEN_AFTER_SAFE_CREATION: {\n    event: GTM_EVENT.META,\n    action: 'Open shared app after Safe creation',\n  },\n}\n\nconst SAFE_APPS_CATEGORY = 'safe-apps'\nexport const SAFE_APPS_EVENTS = addEventCategory(SAFE_APPS, SAFE_APPS_CATEGORY)\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { ChainInfo } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { getChainInfo } from 'src/config'\nimport { border, extraSmallFontSize, sm, xs, fontColor } from 'src/theme/variables'\n\ntype Props = {\n  networkInfo?: ChainInfo\n  onClick?: () => void\n  flexGrow?: boolean\n  ['data-testid']?: string\n}\n\nfunction NetworkLabel(props: Props): ReactElement {\n  const { networkInfo, onClick, flexGrow } = props\n  const selectedNetwork = networkInfo || getChainInfo()\n\n  return (\n    <StyledLabel onClick={onClick} flexGrow={flexGrow} {...selectedNetwork.theme} data-testid={props['data-testid']}>\n      {selectedNetwork.chainName}\n    </StyledLabel>\n  )\n}\n\nexport default NetworkLabel\n\ntype StyledLabelTypes = {\n  backgroundColor: string\n  textColor: string\n  onClick?: () => void\n  flexGrow?: boolean\n}\n\nconst StyledLabel = styled.span<StyledLabelTypes>`\n  position: relative;\n  bottom: 2px;\n  line-height: normal;\n  display: inline-block;\n  min-width: 70px;\n  font-size: ${extraSmallFontSize};\n  padding: ${xs} ${sm};\n  background-color: ${({ backgroundColor }) => backgroundColor ?? border};\n  color: ${({ textColor }) => textColor ?? fontColor};\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'inherit')};\n  text-align: center;\n  border-radius: 4px;\n  text-transform: capitalize;\n  flex-grow: ${({ flexGrow }) => (flexGrow ? 1 : 'initial')};\n`\n","import { useCallback, useMemo } from 'react'\n\nimport { SafeApp } from '../../types'\nimport { useCustomSafeApps } from './useCustomSafeApps'\nimport { useRemoteSafeApps } from './useRemoteSafeApps'\nimport { usePinnedSafeApps } from './usePinnedSafeApps'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\nimport { isSameUrl } from '../../utils'\n\ntype UseAppListReturnType = {\n  allApps: SafeApp[]\n  appList: SafeApp[]\n  customApps: SafeApp[]\n  pinnedSafeApps: SafeApp[]\n  togglePin: (app: SafeApp) => void\n  removeApp: (appId: string) => void\n  addCustomApp: (app: SafeApp) => void\n  isLoading: boolean\n  getSafeApp: (url: string) => SafeApp | undefined\n}\n\nconst useAppList = (): UseAppListReturnType => {\n  const { remoteSafeApps, status: remoteAppsFetchStatus } = useRemoteSafeApps()\n  const { customSafeApps, updateCustomSafeApps } = useCustomSafeApps()\n  const { pinnedSafeAppIds, updatePinnedSafeApps } = usePinnedSafeApps(remoteSafeApps, remoteAppsFetchStatus)\n  const remoteIsLoading = remoteAppsFetchStatus === FETCH_STATUS.LOADING\n\n  const allApps = useMemo(() => {\n    const allApps = [...remoteSafeApps, ...customSafeApps]\n    return allApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps, customSafeApps])\n\n  const appList = useMemo(() => {\n    return remoteSafeApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps])\n\n  const customApps = useMemo(\n    () =>\n      // Filter out custom apps that are now part of the production app list\n      customSafeApps\n        .filter((persistedApp) => !remoteSafeApps.some((app) => app.url === persistedApp.url))\n        .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())),\n    [customSafeApps, remoteSafeApps],\n  )\n\n  const pinnedSafeApps = useMemo(\n    () => appList.filter((app) => pinnedSafeAppIds.includes(app.id)),\n    [pinnedSafeAppIds, appList],\n  )\n\n  const addCustomApp = useCallback(\n    (app: SafeApp): void => {\n      const newList = [...customSafeApps, app]\n      updateCustomSafeApps(newList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const removeApp = useCallback(\n    (appId: string): void => {\n      const newPersistedList = customSafeApps.filter(({ id }) => id !== appId)\n      updateCustomSafeApps(newPersistedList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const togglePin = useCallback(\n    (app: SafeApp): void => {\n      const { id: appId, name: appName } = app\n      const newPinnedIds = [...pinnedSafeAppIds]\n      const isAppPinned = pinnedSafeAppIds.includes(appId)\n\n      if (isAppPinned) {\n        trackEvent({ ...SAFE_APPS_EVENTS.UNPIN, label: appName })\n        newPinnedIds.splice(newPinnedIds.indexOf(appId), 1)\n      } else {\n        trackEvent({ ...SAFE_APPS_EVENTS.PIN, label: appName })\n        newPinnedIds.push(appId)\n      }\n\n      updatePinnedSafeApps(newPinnedIds)\n    },\n    [updatePinnedSafeApps, pinnedSafeAppIds],\n  )\n\n  const getSafeApp = useCallback(\n    (url: string): SafeApp | undefined => {\n      const urlInstance = new URL(url)\n      const safeAppUrl = `${urlInstance.hostname}/${urlInstance.pathname}`\n\n      return appList.find((app: SafeApp) => {\n        const appUrlInstance = new URL(app?.url)\n\n        if (isSameUrl(`${appUrlInstance?.hostname}/${appUrlInstance?.pathname}`, safeAppUrl)) {\n          return app\n        }\n      })\n    },\n    [appList],\n  )\n\n  return {\n    allApps,\n    appList,\n    customApps,\n    pinnedSafeApps,\n    removeApp,\n    togglePin,\n    addCustomApp,\n    isLoading: remoteIsLoading,\n    getSafeApp,\n  }\n}\n\nexport { useAppList }\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { APPS_STORAGE_KEY, getAppInfoFromUrl, getEmptySafeApp } from '../../utils'\nimport { StoredSafeApp, SafeApp } from '../../types'\n\ntype ReturnType = {\n  customSafeApps: SafeApp[]\n  loaded: boolean\n  updateCustomSafeApps: (newCustomSafeApps: SafeApp[]) => void\n}\n\ntype CustomSafeApp = StoredSafeApp\n\n/*\n  This hook is used to manage the list of custom safe apps.\n  What it does:\n  1. Loads a list of custom safe apps from local storage\n  2. Does some backward compatibility checks (supported app networks, etc)\n  3. Tries to fetch the app info (manifest.json) from the app url\n*/\nconst useCustomSafeApps = (): ReturnType => {\n  const [customSafeApps, setCustomSafeApps] = useState<SafeApp[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  const updateCustomSafeApps = useCallback((newCustomSafeApps: SafeApp[]) => {\n    setCustomSafeApps(newCustomSafeApps)\n    saveToStorage(\n      APPS_STORAGE_KEY,\n      newCustomSafeApps.map(({ url }) => ({ url })),\n    )\n  }, [])\n\n  useEffect(() => {\n    const fetchAppCallback = (res: SafeApp, error = false) => {\n      setCustomSafeApps((prev) => {\n        const prevAppsCopy = [...prev]\n        const appIndex = prevAppsCopy.findIndex((a) => a.url === res.url)\n\n        if (error) {\n          prevAppsCopy.splice(appIndex, 1)\n        } else {\n          prevAppsCopy[appIndex] = { ...res, fetchStatus: FETCH_STATUS.SUCCESS }\n        }\n\n        return prevAppsCopy\n      })\n    }\n\n    const loadCustomApps = () => {\n      // recover apps from storage (third-party apps added by the user)\n      const storageAppList = loadFromStorage<CustomSafeApp[]>(APPS_STORAGE_KEY) || []\n      // if the app does not expose supported networks, include them. (backward compatible)\n      const serializedApps = storageAppList.map(\n        (app): SafeApp => ({\n          ...getEmptySafeApp(),\n          ...app,\n          url: app.url.trim(),\n          id: app.url.trim(),\n          custom: true,\n        }),\n      )\n      setCustomSafeApps(serializedApps)\n      setLoaded(true)\n\n      serializedApps.forEach((app) => {\n        getAppInfoFromUrl(app.url)\n          .then((appFromUrl) => {\n            fetchAppCallback({ ...appFromUrl, custom: true })\n          })\n          .catch((err) => {\n            fetchAppCallback(app, true)\n            logError(Errors._900, `${app.url}, ${err.message}`)\n          })\n      })\n    }\n\n    loadCustomApps()\n  }, [])\n\n  return { customSafeApps, loaded, updateCustomSafeApps }\n}\n\nexport { useCustomSafeApps }\n","import { useState, useEffect } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { PINNED_SAFE_APP_IDS } from '../../utils'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\n\ntype ReturnType = {\n  pinnedSafeAppIds: string[]\n  loaded: boolean\n  updatePinnedSafeApps: (newPinnedSafeAppIds: string[]) => void\n}\n\nconst usePinnedSafeApps = (remoteSafeApps: SafeApp[], remoteAppsFetchStatus: FETCH_STATUS): ReturnType => {\n  const [pinnedSafeAppIds, updatePinnedSafeApps] = useState<string[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    const loadPinnedAppIds = () => {\n      const pinnedAppIds = loadFromStorage<string[]>(PINNED_SAFE_APP_IDS) || []\n\n      const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n      if (isRemoteSafeAppsListLoaded) {\n        // we remove pinned Safe Apps that are not included in the remote list, see #2847\n        const filteredPinnedAppsIds = pinnedAppIds.filter((pinnedAppId) =>\n          remoteSafeApps.some((app) => app.id === pinnedAppId),\n        )\n        updatePinnedSafeApps(filteredPinnedAppsIds)\n        setLoaded(true)\n      }\n    }\n\n    loadPinnedAppIds()\n  }, [remoteAppsFetchStatus, remoteSafeApps])\n\n  // we only update pinned apps in the localStorage when remote Apps are loaded\n  useEffect(() => {\n    const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n    if (isRemoteSafeAppsListLoaded) {\n      saveToStorage(PINNED_SAFE_APP_IDS, pinnedSafeAppIds)\n    }\n  }, [pinnedSafeAppIds, remoteAppsFetchStatus])\n\n  return { pinnedSafeAppIds, loaded, updatePinnedSafeApps }\n}\n\nexport { usePinnedSafeApps }\n","import { getSafeApps, SafeAppData } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { _getChainId } from 'src/config'\n\nexport const fetchSafeAppsList = async (): Promise<SafeAppData[]> => {\n  return getSafeApps(_getChainId(), {\n    client_url: window.location.origin,\n  })\n}\n","import { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { SafeAppData } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { showNotification } from 'src/logic/notifications/store/notifications'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\nimport { fetchSafeAppsList } from 'src/logic/safe/api/fetchSafeApps'\n\ntype ReturnType = {\n  remoteSafeApps: SafeApp[]\n  status: FETCH_STATUS\n}\n\n// Memoize the fetch request so that simulteneous calls\n// to this function return the same promise\nlet fetchPromise: Promise<SafeAppData[]> | null = null\nconst memoizedFetchSafeApps = (): Promise<SafeAppData[]> => {\n  if (!fetchPromise) {\n    fetchPromise = fetchSafeAppsList()\n  }\n  fetchPromise.finally(() => (fetchPromise = null))\n  return fetchPromise\n}\n\nconst useRemoteSafeApps = (): ReturnType => {\n  const [remoteSafeApps, setRemoteSafeApps] = useState<SafeApp[]>([])\n  const [status, setStatus] = useState<FETCH_STATUS>(FETCH_STATUS.NOT_ASKED)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const loadAppsList = async () => {\n      setStatus(FETCH_STATUS.LOADING)\n      try {\n        const result = await memoizedFetchSafeApps()\n\n        if (result?.length) {\n          setRemoteSafeApps(result.map((app) => ({ ...app, fetchStatus: FETCH_STATUS.SUCCESS, id: String(app.id) })))\n          setStatus(FETCH_STATUS.SUCCESS)\n        } else {\n          throw new Error('Empty apps array 🤬')\n        }\n      } catch (e) {\n        setStatus(FETCH_STATUS.ERROR)\n        logError(Errors._902, e.message)\n        dispatch(showNotification(NOTIFICATIONS.SAFE_APPS_FETCH_ERROR_MSG))\n      }\n    }\n\n    loadAppsList()\n  }, [dispatch])\n\n  return { remoteSafeApps, status }\n}\n\nexport { useRemoteSafeApps }\n","import { createSelector } from 'reselect'\nimport { NFTAsset, NFTAssets, NFTTokens, NFTTokensStore } from 'src/logic/collectibles/sources/collectibles.d'\n\nimport { AppReduxState } from 'src/store'\nimport { NFT_ASSETS_REDUCER_ID, NFT_TOKENS_REDUCER_ID } from 'src/logic/collectibles/store/reducer/collectibles'\nexport const nftAssets = (state: AppReduxState): NFTAssets => state[NFT_ASSETS_REDUCER_ID]\nexport const nftTokens = (state: AppReduxState): NFTTokensStore => state[NFT_TOKENS_REDUCER_ID]\n\nexport const nftAssetsSelector = createSelector(nftAssets, (assets) => assets)\n\nexport const nftTokensSelector = createSelector(nftTokens, (tokens) => tokens.items)\n\nexport const nftLoadedSelector = createSelector(nftTokens, (tokens) => tokens.loaded)\n\nconst nftAssetsToListSelector = createSelector(nftAssets, (assets): NFTAsset[] => {\n  return assets ? Object.values(assets) : []\n})\n\nconst nftAssetsAddressFromNftTokensSelector = createSelector(nftTokensSelector, (userNftTokens): string[] => {\n  const addresses = userNftTokens.map((nftToken) => nftToken.assetAddress)\n  const uniqueAddresses = new Set(addresses)\n  return Array.from(uniqueAddresses)\n})\n\nexport const orderedNFTAssets = createSelector(\n  nftTokensSelector,\n  (userNftTokens): NFTTokens => userNftTokens.sort((a, b) => a.name.localeCompare(b.name)),\n)\n\nexport const nftAssetsFromNftTokensSelector = createSelector(\n  nftAssetsToListSelector,\n  nftAssetsAddressFromNftTokensSelector,\n  (nftAssets, nftAssetsFromNftTokens): NFTAsset[] => {\n    return nftAssets\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter(({ address }) => nftAssetsFromNftTokens.includes(address))\n  },\n)\n","import classNames from 'classnames/bind'\n\nimport styles from './index.module.scss'\n\nconst cx = classNames.bind(styles)\n\nconst Page = ({ align, children, overflow }: any) => (\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\n)\n\nexport default Page\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__G6hb0\",\"center\":\"Page_center__1dwJ9\",\"overflow\":\"Page_overflow__30EmX\"};","import styled, { keyframes } from 'styled-components'\n\nexport const gradientSK = keyframes`\n0% {\n  background-position: 0% 54%;\n}\n50% {\n  background-position: 100% 47%;\n}\n100% {\n  background-position: 0% 54%;\n}\n`\n\nexport const SafeAppLogoSK = styled.div`\n  height: ${(props: { size }) => (props.size === 'lg' ? '112px' : '50px')};\n  width: ${(props: { size }) => (props.size === 'lg' ? '112px' : '50px')};\n  border-radius: 50%;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n\nexport const SafeAppTitleSK = styled.div`\n  height: 18px;\n  width: 160px;\n  margin: 8px 0;\n\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n\nexport const SafeAppDescriptionSK = styled.div`\n  height: 12px;\n  width: 240px;\n  margin: 2px 0;\n\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n","import { SyntheticEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Card, Title, Text, Icon } from '@gnosis.pm/safe-react-components'\n\nimport { generateSafeRoute, getShareSafeAppUrl, SAFE_ROUTES } from 'src/routes/routes'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport fallbackSafeAppLogoSvg from 'src/assets/icons/apps.svg'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { showNotification } from 'src/logic/notifications/store/notifications'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { copyToClipboard } from 'src/utils/clipboard'\nimport { getShortName } from 'src/config'\nimport { SafeAppDescriptionSK, SafeAppLogoSK, SafeAppTitleSK } from './SafeAppSkeleton'\nimport { primary200, primary300 } from 'src/theme/variables'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\ntype SafeAppCardSize = 'md' | 'lg'\n\ntype SafeAppCardProps = {\n  safeApp: SafeApp\n  size: SafeAppCardSize\n  togglePin: (app: SafeApp) => void\n  isPinned?: boolean\n  isCustomSafeApp?: boolean\n  onRemove?: (app: SafeApp) => void\n}\n\nconst SafeAppCard = ({\n  safeApp,\n  size,\n  togglePin,\n  isPinned,\n  isCustomSafeApp,\n  onRemove,\n}: SafeAppCardProps): React.ReactElement => {\n  const chainId = useSelector(currentChainId)\n  const dispatch = useDispatch()\n\n  const { safeAddress } = useSafeAddress()\n  const appsPath = generateSafeRoute(SAFE_ROUTES.APPS, {\n    shortName: getShortName(),\n    safeAddress,\n  })\n  const openSafeAppLink = `${appsPath}?appUrl=${encodeURI(safeApp.url)}`\n\n  const shareSafeApp = () => {\n    const shareSafeAppUrl = getShareSafeAppUrl(safeApp.url, chainId)\n    copyToClipboard(shareSafeAppUrl)\n    dispatch(showNotification(NOTIFICATIONS.SHARE_SAFE_APP_URL_COPIED))\n  }\n\n  const isSafeAppLoading = safeApp.fetchStatus === FETCH_STATUS.LOADING\n\n  if (isSafeAppLoading) {\n    return (\n      <SafeAppContainer size={size}>\n        <StyledAppCard size={size}>\n          <LogoContainer size={size}>\n            <SafeAppLogoSK size={size} />\n          </LogoContainer>\n          <DescriptionContainer size={size}>\n            <SafeAppTitleSK />\n            <SafeAppDescriptionSK />\n            <SafeAppDescriptionSK />\n          </DescriptionContainer>\n        </StyledAppCard>\n      </SafeAppContainer>\n    )\n  }\n\n  return (\n    <SafeAppContainer size={size}>\n      <StyledLink to={openSafeAppLink} aria-label={`open ${safeApp.name} Safe App`}>\n        <StyledAppCard size={size}>\n          {/* Safe App Logo */}\n          <LogoContainer size={size}>\n            <SafeAppLogo\n              size={size}\n              src={safeApp.iconUrl}\n              alt={`${safeApp.name || 'Safe App'} Logo`}\n              onError={setSafeAppLogoFallback}\n            />\n          </LogoContainer>\n\n          {/* Safe App Description */}\n          <DescriptionContainer size={size}>\n            <SafeAppTitle size=\"xs\">{safeApp.name}</SafeAppTitle>\n            <SafeAppDescription size=\"lg\" color=\"inputFilled\">\n              {safeApp.description}\n            </SafeAppDescription>\n          </DescriptionContainer>\n\n          {/* Safe App Actions */}\n          <ActionsContainer onClick={(e) => e.preventDefault()}>\n            {/* Share Safe App button */}\n            <IconBtn onClick={shareSafeApp} aria-label={`copy ${safeApp.name} Safe App share link to clipboard`}>\n              <Icon size=\"md\" type=\"share\" tooltip=\"Copy share link\" />\n            </IconBtn>\n\n            {/* Pin & Unpin Safe App button */}\n            {!isCustomSafeApp && (\n              <IconBtn\n                onClick={() => togglePin(safeApp)}\n                aria-label={`${isPinned ? 'Unpin' : 'Pin'} ${safeApp.name} Safe App`}\n              >\n                {isPinned ? (\n                  <PinnedIcon size=\"md\" type=\"bookmarkFilled\" color=\"primary\" tooltip=\"Unpin from the Safe Apps\" />\n                ) : (\n                  <PinnedIcon size=\"md\" type=\"bookmark\" tooltip=\"Pin from the Safe Apps\" />\n                )}\n              </IconBtn>\n            )}\n\n            {/* Remove custom Safe App button */}\n            {isCustomSafeApp && (\n              <IconBtn onClick={() => onRemove?.(safeApp)} aria-label={`Remove ${safeApp.name} custom Safe App`}>\n                <Icon size=\"md\" type=\"delete\" color=\"error\" tooltip=\"Remove Custom Safe App\" />\n              </IconBtn>\n            )}\n          </ActionsContainer>\n        </StyledAppCard>\n      </StyledLink>\n    </SafeAppContainer>\n  )\n}\n\nexport default SafeAppCard\n\nconst setSafeAppLogoFallback = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = fallbackSafeAppLogoSvg\n}\n\nexport const SAFE_APP_CARD_HEIGHT = 190\nexport const SAFE_APP_CARD_PADDING = 16\n\nconst SafeAppContainer = styled(motion.div).attrs({\n  layout: true,\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n})`\n  position: relative;\n  display: flex;\n  height: ${SAFE_APP_CARD_HEIGHT}px;\n\n  grid-column: span ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '2' : '1')};\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex: 1 0;\n  height: ${SAFE_APP_CARD_HEIGHT}px;\n  text-decoration: none;\n`\n\nconst StyledAppCard = styled(Card)`\n  flex: 1 1 100%;\n  padding: ${SAFE_APP_CARD_PADDING}px;\n  display: flex;\n  flex-direction: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? 'row' : 'column')};\n  box-shadow: none;\n  border: 2px solid transparent;\n\n  transition: all 0.3s ease-in-out 0s;\n  transition-property: border-color, background-color;\n\n  :hover {\n    background-color: ${primary200};\n    border: 2px solid ${primary300};\n  }\n`\n\nconst LogoContainer = styled.div`\n  flex: 0 0;\n  flex-basis: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '50%' : 'auto')};\n\n  display: flex;\n  justify-content: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? 'center' : 'start')};\n  align-items: center;\n`\n\nconst SafeAppLogo = styled.img`\n  height: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '112px' : '50px')};\n  width: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '112px' : '50px')};\n  object-fit: contain;\n`\n\nconst DescriptionContainer = styled.div`\n  flex: 0 0;\n\n  flex-basis: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '50%' : 'auto')};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst SafeAppTitle = styled(Title)`\n  margin: 8px 0px;\n  font-size: 16px;\n  line-height: 22px;\n  font-weight: bold;\n  color: initial;\n`\n\nconst SafeAppDescription = styled(Text)`\n  margin: 0;\n  line-height: 22px;\n\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nconst ActionsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  margin: 16px 12px;\n`\n\nconst IconBtn = styled(IconButton)`\n  padding: 8px;\n\n  && svg {\n    width: 16px;\n    height: 16px;\n  }\n`\nconst PinnedIcon = styled(Icon)`\n  padding-left: 2px;\n`\n","export const copyToClipboard = (text: string): void => {\n  const range = document.createRange()\n  range.selectNodeContents(document.body)\n  document?.getSelection()?.addRange(range)\n\n  function listener(e: ClipboardEvent) {\n    e.clipboardData?.setData('text/plain', text)\n    e.preventDefault()\n  }\n  document.addEventListener('copy', listener)\n  document.execCommand('copy')\n  document.removeEventListener('copy', listener)\n\n  document?.getSelection()?.removeAllRanges()\n}\n","import { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport local from 'src/utils/storage/local'\n\nexport const APPS_DASHBOARD = 'APPS_DASHBOARD'\n\nconst TX_COUNT_WEIGHT = 2\nconst OPEN_COUNT_WEIGHT = 1\nconst PINNED_WEIGHT = 10\n\nexport type AppTrackData = {\n  [safeAppId: string]: {\n    timestamp: number\n    openCount: number\n    txCount: number\n  }\n}\n\nexport const getAppsUsageData = (): AppTrackData => {\n  return local.getItem<AppTrackData>(APPS_DASHBOARD) || {}\n}\n\nexport const trackSafeAppOpenCount = (id: SafeApp['id']): void => {\n  const trackData = getAppsUsageData()\n  const currentOpenCount = trackData[id]?.openCount || 0\n  const currentTxCount = trackData[id]?.txCount || 0\n\n  local.setItem(APPS_DASHBOARD, {\n    ...trackData,\n    [id]: {\n      timestamp: Date.now(),\n      openCount: currentOpenCount + 1,\n      txCount: currentTxCount,\n    },\n  })\n}\n\nexport const trackSafeAppTxCount = (id: SafeApp['id']): void => {\n  const trackData = getAppsUsageData()\n  const currentTxCount = trackData[id]?.txCount || 0\n\n  local.setItem(APPS_DASHBOARD, {\n    ...trackData,\n    // The object contains the openCount when we are creating a transaction\n    [id]: { ...trackData[id], txCount: currentTxCount + 1 },\n  })\n}\n\n// https://stackoverflow.com/a/55212064\nconst normalizeBetweenTwoRanges = (\n  val: number,\n  minVal: number,\n  maxVal: number,\n  newMin: number,\n  newMax: number,\n): number => {\n  return newMin + ((val - minVal) * (newMax - newMin)) / (maxVal - minVal)\n}\n\nexport const rankSafeApps = (apps: AppTrackData, pinnedSafeApps: SafeApp[]): string[] => {\n  const appsWithScore = computeTrackedSafeAppsScore(apps)\n\n  for (const app of pinnedSafeApps) {\n    if (appsWithScore[app.id]) {\n      appsWithScore[app.id] += PINNED_WEIGHT\n    } else {\n      appsWithScore[app.id] = PINNED_WEIGHT\n    }\n  }\n\n  return Object.entries(appsWithScore)\n    .sort((a, b) => b[1] - a[1])\n    .map((app) => app[0])\n}\n\nexport const computeTrackedSafeAppsScore = (apps: AppTrackData): Record<string, number> => {\n  const scoredApps: Record<string, number> = {}\n\n  const sortedByTimestamp = Object.entries(apps).sort((a, b) => {\n    return a[1].timestamp - b[1].timestamp\n  })\n\n  for (const [idx, app] of sortedByTimestamp.entries()) {\n    // UNIX Timestamps add too much weight, so we normalize by uniformly distributing them to range [1..2]\n    const timeMultiplier = normalizeBetweenTwoRanges(idx, 0, sortedByTimestamp.length, 1, 2)\n\n    scoredApps[app[0]] = (TX_COUNT_WEIGHT * app[1].txCount + OPEN_COUNT_WEIGHT * app[1].openCount) * timeMultiplier\n  }\n\n  return scoredApps\n}\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: (0, _styles.alpha)(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\n\nexports.styles = styles;\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = (0, _objectWithoutProperties2.default)(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, (0, _extends2.default)({\n    ref: ref,\n    className: (0, _clsx.default)(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: (0, _extends2.default)({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\r\n   * The animation.\r\n   * If `false` the animation effect is disabled.\r\n   */\n  animation: _propTypes.default.oneOf(['pulse', 'wave', false]),\n\n  /**\r\n   * Optional children to infer width and height from.\r\n   */\n  children: _propTypes.default.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: _propTypes.default.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * Height of the skeleton.\r\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\r\n   */\n  height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\r\n   * The type of content that will be rendered.\r\n   */\n  variant: _propTypes.default.oneOf(['text', 'rect', 'circle']),\n\n  /**\r\n   * Width of the skeleton.\r\n   * Useful when the skeleton is inside an inline element with no width of its own.\r\n   */\n  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])\n} : void 0;\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);\n\nexports.default = _default;","import { ReactElement } from 'react'\nimport { Text } from '@gnosis.pm/safe-react-components'\nimport { TransactionSummary } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { Link } from 'react-router-dom'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport styled from 'styled-components'\n\nimport { useAssetInfo } from 'src/routes/safe/components/Transactions/TxList/hooks/useAssetInfo'\nimport { useKnownAddress } from 'src/routes/safe/components/Transactions/TxList/hooks/useKnownAddress'\nimport { useTransactionType } from 'src/routes/safe/components/Transactions/TxList/hooks/useTransactionType'\nimport { getTxTo } from 'src/routes/safe/components/Transactions/TxList/utils'\nimport { boldFont, grey400, primary200, smallFontSize } from 'src/theme/variables'\nimport { isMultisigExecutionInfo } from 'src/logic/safe/store/models/types/gateway.d'\nimport Spacer from 'src/components/Spacer'\nimport { CustomIconText } from 'src/components/CustomIconText'\nimport { TxInfo } from 'src/routes/safe/components/Transactions/TxList/TxCollapsed'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\n\nconst TransactionToConfirm = styled(Link)`\n  width: 100%;\n  display: grid;\n  align-items: center;\n  grid-template-columns: 36px 1fr 1fr auto;\n  gap: 4px;\n  margin: 0 auto;\n  padding: 8px 24px;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.colors.white};\n  border: 2px solid ${grey400};\n  color: ${({ theme }) => theme.colors.text};\n  border-radius: 8px;\n  box-sizing: border-box;\n`\n\nconst StyledConfirmationsCount = styled.div`\n  padding: 8px 12px;\n  border-radius: 8px;\n  background-color: ${primary200};\n  font-weight: ${boldFont};\n  font-size: ${smallFontSize};\n`\n\nconst TxConfirmations = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n\n  & svg {\n    margin-left: 8px;\n  }\n`\n\ntype PendingTxType = {\n  transaction: TransactionSummary\n  url: string\n}\n\nconst PendingTx = ({ transaction, url }: PendingTxType): ReactElement => {\n  const info = useAssetInfo(transaction.txInfo)\n  const type = useTransactionType(transaction)\n  const toAddress = getTxTo(transaction)\n  const toInfo = useKnownAddress(toAddress)\n\n  return (\n    <TransactionToConfirm key={transaction.id} to={url}>\n      <Text color=\"text\" size=\"lg\" as=\"span\">\n        {isMultisigExecutionInfo(transaction.executionInfo) && transaction.executionInfo.nonce}\n      </Text>\n      <CustomIconText\n        address={toAddress?.value || EMPTY_DATA}\n        iconUrl={type.icon || toInfo?.logoUri || undefined}\n        iconUrlFallback={type.fallbackIcon}\n        text={type.text || toInfo?.name || undefined}\n      />\n      {info ? <TxInfo info={info} /> : <Spacer />}\n      <TxConfirmations>\n        {isMultisigExecutionInfo(transaction.executionInfo) ? (\n          <StyledConfirmationsCount>\n            {`${transaction.executionInfo.confirmationsSubmitted}/${transaction.executionInfo.confirmationsRequired}`}\n          </StyledConfirmationsCount>\n        ) : (\n          <Spacer />\n        )}\n        <ChevronRightIcon color=\"secondary\" />\n      </TxConfirmations>\n    </TransactionToConfirm>\n  )\n}\n\nexport default PendingTx\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { xs, lg, black500, extraLargeFontSize, largeFontSize } from 'src/theme/variables'\n\nexport const WidgetContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nexport const DashboardTitle = styled.h1`\n  color: ${black500};\n  font-size: ${extraLargeFontSize};\n  width: 100%;\n  margin: 12px 12px -33px;\n`\n\nexport const WidgetTitle = styled.h2`\n  color: ${black500};\n  font-size: ${largeFontSize};\n  margin-top: 0;\n`\n\nexport const WidgetBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  height: 100%;\n`\n\nexport const Card = styled.div`\n  background: ${({ theme }) => theme.colors.white};\n  padding: ${lg};\n  border-radius: 8px;\n  flex-grow: 1;\n  position: relative;\n  box-sizing: border-box;\n  height: 100%;\n\n  & h2 {\n    margin-top: 0;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  gap: ${xs};\n  margin-bottom: 10px;\n  padding-right: 26px;\n`\n\nexport const ViewAllLink = ({ url, text }: { url: string; text?: string }): ReactElement => (\n  <StyledLink to={url}>\n    {text || 'View All'}\n    <ChevronRightIcon />\n  </StyledLink>\n)\n","import { ReactElement, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport Skeleton from '@material-ui/lab/Skeleton/Skeleton'\nimport { Text } from '@gnosis.pm/safe-react-components'\nimport { Box } from '@material-ui/core'\n\nimport { Transaction } from 'src/logic/safe/store/models/types/gateway.d'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\nimport { getChainById } from 'src/config'\nimport PendingTxListItem from 'src/components/Dashboard/PendingTxs/PendingTxListItem'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { pendingTransactions } from 'src/logic/safe/store/selectors/gatewayTransactions'\nimport { Card, WidgetBody, WidgetContainer, WidgetTitle, ViewAllLink } from 'src/components/Dashboard/styled'\nimport NoTransactionsImage from 'src/routes/safe/components/Transactions/TxList/assets/no-transactions.svg'\nimport Img from 'src/components/layout/Img'\n\nconst SkeletonWrapper = styled.div`\n  border-radius: 8px;\n  overflow: hidden;\n`\n\nconst StyledList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n`\n\nconst StyledWidgetTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst EmptyState = (\n  <Card>\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\" height={1} gridGap=\"16px\">\n      <Img alt=\"No Transactions yet\" src={NoTransactionsImage} />\n      <Text size=\"xl\">This Safe has no queued transactions</Text>\n    </Box>\n  </Card>\n)\n\nconst PendingTxsList = ({ size = 5 }: { size?: number }): ReactElement | null => {\n  const { address, loaded } = useSelector(currentSafe)\n  const chainId = useSelector(currentChainId)\n  const queueTxns = useSelector(pendingTransactions)\n  const { shortName } = getChainById(chainId)\n  const url = generateSafeRoute(SAFE_ROUTES.TRANSACTIONS_QUEUE, { safeAddress: address, shortName })\n  const [totalQueuedTxs, setTotalQueuedTxs] = useState<number>()\n\n  const queuedTxsToDisplay: Transaction[] = useMemo(() => {\n    if (!queueTxns) return []\n\n    const allQueuedTransactions = Object.values(queueTxns.next).concat(Object.values(queueTxns.queued))\n    setTotalQueuedTxs(allQueuedTransactions.length)\n\n    return (\n      allQueuedTransactions\n        // take the most recent tx in a group of txns with the same nonce\n        .map((group: Transaction[]) => group.reduce((acc, tx) => (tx.timestamp > acc.timestamp ? tx : acc), group[0]))\n        .slice(0, size)\n    )\n  }, [queueTxns, size])\n\n  const LoadingState = useMemo(\n    () => (\n      <StyledList>\n        {Array.from(Array(size).keys()).map((key) => (\n          <SkeletonWrapper key={key}>\n            <Skeleton variant=\"rect\" height={52} />\n          </SkeletonWrapper>\n        ))}\n      </StyledList>\n    ),\n    [size],\n  )\n\n  const ResultState = useMemo(\n    () => (\n      <StyledList>\n        {queuedTxsToDisplay.map((transaction) => (\n          <PendingTxListItem transaction={transaction} url={url} key={transaction.id} />\n        ))}\n      </StyledList>\n    ),\n    [queuedTxsToDisplay, url],\n  )\n\n  const getWidgetBody = () => {\n    if (!loaded) return LoadingState\n    if (!queuedTxsToDisplay.length) return EmptyState\n    return ResultState\n  }\n\n  return (\n    <WidgetContainer>\n      <StyledWidgetTitle>\n        <WidgetTitle>Transaction Queue {totalQueuedTxs ? ` (${totalQueuedTxs})` : ''}</WidgetTitle>\n        <ViewAllLink url={url} />\n      </StyledWidgetTitle>\n      <WidgetBody>{getWidgetBody()}</WidgetBody>\n    </WidgetContainer>\n  )\n}\n\nexport default PendingTxsList\n","import { ReactElement, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Text, Identicon } from '@gnosis.pm/safe-react-components'\nimport { Box, Grid } from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab'\n\nimport { currentSafeLoaded, currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { md, lg } from 'src/theme/variables'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport { nftLoadedSelector, nftTokensSelector } from 'src/logic/collectibles/store/selectors'\nimport { Card, WidgetTitle } from 'src/components/Dashboard/styled'\nimport { WidgetBody, WidgetContainer } from 'src/components/Dashboard/styled'\nimport Button from 'src/components/layout/Button'\nimport { generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { getChainById } from 'src/config'\nimport Threshold from 'src/components/AppLayout/Sidebar/Threshold'\n\nconst IdenticonContainer = styled.div`\n  position: relative;\n  margin-bottom: ${md};\n`\n\nconst StyledText = styled(Text)`\n  margin-top: 8px;\n  font-size: 24px;\n  font-weight: bold;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst NetworkLabelContainer = styled.div`\n  position: absolute;\n  top: ${lg};\n  right: ${lg};\n\n  & span {\n    bottom: auto;\n  }\n`\n\nconst ValueSkeleton = <Skeleton variant=\"text\" width={30} />\n\nconst SkeletonOverview = (\n  <Card>\n    <Grid container>\n      <Grid item xs={12}>\n        <IdenticonContainer>\n          <Skeleton variant=\"circle\" width=\"48px\" height=\"48px\" />\n        </IdenticonContainer>\n\n        <Box mb={2}>\n          <Text size=\"xl\" strong>\n            <Skeleton variant=\"text\" height={28} />\n          </Text>\n          <Skeleton variant=\"text\" height={21} />\n        </Box>\n        <NetworkLabelContainer>\n          <Skeleton variant=\"text\" width=\"80px\" />\n        </NetworkLabelContainer>\n      </Grid>\n    </Grid>\n    <Grid container>\n      <Grid item xs={3}>\n        <Text color=\"inputDefault\" size=\"lg\">\n          Tokens\n        </Text>\n        <StyledText size=\"xl\">{ValueSkeleton}</StyledText>\n      </Grid>\n      <Grid item xs={3}>\n        <Text color=\"inputDefault\" size=\"lg\">\n          NFTs\n        </Text>\n        <StyledText size=\"xl\">{ValueSkeleton}</StyledText>\n      </Grid>\n    </Grid>\n  </Card>\n)\n\nconst Overview = (): ReactElement => {\n  const { address, name, owners, threshold, balances } = useSelector(currentSafeWithNames)\n  const chainId = useSelector(currentChainId)\n  const { shortName } = getChainById(chainId)\n  const loaded = useSelector(currentSafeLoaded)\n  const nftTokens = useSelector(nftTokensSelector)\n  const nftLoaded = useSelector(nftLoadedSelector)\n\n  const assetsLink = generateSafeRoute(SAFE_ROUTES.ASSETS_BALANCES, { safeAddress: address, shortName })\n  const nftsLink = generateSafeRoute(SAFE_ROUTES.ASSETS_BALANCES_COLLECTIBLES, { safeAddress: address, shortName })\n\n  // Native token is always returned even when its balance is 0\n  const tokenCount = useMemo(() => balances.filter((token) => token.tokenBalance !== '0').length, [balances])\n\n  return (\n    <WidgetContainer>\n      <WidgetTitle>&nbsp;</WidgetTitle>\n\n      <WidgetBody>\n        {!loaded ? (\n          SkeletonOverview\n        ) : (\n          <Card>\n            <Grid container>\n              <Grid item xs={12}>\n                <IdenticonContainer>\n                  <Threshold threshold={threshold} owners={owners.length} size={14} />\n                  <Identicon address={address} size=\"xl\" />\n                </IdenticonContainer>\n                <Box mb={2} overflow=\"hidden\">\n                  <Text size=\"xl\" strong>\n                    {name}\n                  </Text>\n                  <PrefixedEthHashInfo hash={address} textSize=\"xl\" textColor=\"placeHolder\" />\n                </Box>\n                <NetworkLabelContainer>\n                  <NetworkLabel />\n                </NetworkLabelContainer>\n              </Grid>\n            </Grid>\n\n            <Grid container>\n              <Grid item xs={3}>\n                <StyledLink to={assetsLink}>\n                  <Text color=\"inputDefault\" size=\"lg\">\n                    Tokens\n                  </Text>\n                  <StyledText size=\"xl\">{tokenCount}</StyledText>\n                </StyledLink>\n              </Grid>\n\n              <Grid item xs={3}>\n                <StyledLink to={nftsLink}>\n                  <Text color=\"inputDefault\" size=\"lg\">\n                    NFTs\n                  </Text>\n                  {nftTokens && <StyledText size=\"xl\">{nftLoaded ? nftTokens.length : ValueSkeleton}</StyledText>}\n                </StyledLink>\n              </Grid>\n\n              <Grid item xs={6}>\n                <Box display=\"flex\" height={1} alignItems=\"flex-end\" justifyContent=\"flex-end\">\n                  <StyledLink to={assetsLink}>\n                    <Button size=\"medium\" variant=\"contained\" color=\"primary\">\n                      View Assets\n                    </Button>\n                  </StyledLink>\n                </Box>\n              </Grid>\n            </Grid>\n          </Card>\n        )}\n      </WidgetBody>\n    </WidgetContainer>\n  )\n}\n\nexport default Overview\n","export default __webpack_public_path__ + \"static/media/explore.f976667e.svg\";","import { ReactElement, useMemo } from 'react'\nimport { useAppList } from 'src/routes/safe/components/Apps/hooks/appList/useAppList'\nimport { Text } from '@gnosis.pm/safe-react-components'\nimport { Link } from 'react-router-dom'\nimport { Box, Grid } from '@material-ui/core'\n\nimport styled from 'styled-components'\nimport { getSafeAppUrl, SafeRouteParams } from 'src/routes/routes'\nimport { Card, WidgetBody, WidgetContainer, WidgetTitle } from 'src/components/Dashboard/styled'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\nexport const FEATURED_APPS_TAG = 'dashboard-widgets'\n\nconst StyledImage = styled.img`\n  width: 64px;\n  height: 64px;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst StyledGrid = styled(Grid)`\n  gap: 24px;\n`\n\nconst StyledGridItem = styled(Grid)`\n  min-width: 300px;\n`\n\nexport const FeaturedApps = (): ReactElement | null => {\n  const { allApps, isLoading } = useAppList()\n\n  const { shortName, safeAddress } = useSafeAddress()\n  const featuredApps = useMemo(() => allApps.filter((app) => app.tags?.includes(FEATURED_APPS_TAG)), [allApps])\n\n  const routesSlug: SafeRouteParams = {\n    shortName,\n    safeAddress,\n  }\n\n  if (!featuredApps.length && !isLoading) return null\n\n  return (\n    <Grid item xs={12} md>\n      <WidgetContainer id=\"featured-safe-apps\">\n        <WidgetTitle>Connect & Transact</WidgetTitle>\n        <WidgetBody>\n          <StyledGrid container>\n            {featuredApps.map((app) => (\n              <StyledGridItem item xs md key={app.id}>\n                <StyledLink to={getSafeAppUrl(app.url, routesSlug)}>\n                  <Card>\n                    <Grid container alignItems=\"center\" spacing={3}>\n                      <Grid item xs={12} md={3}>\n                        <StyledImage src={app.iconUrl} alt={app.name} />\n                      </Grid>\n                      <Grid item xs={12} md={9}>\n                        <Box mb={1.01}>\n                          <Text size=\"xl\">{app.description}</Text>\n                        </Box>\n                        <Text color=\"primary\" size=\"lg\" strong>\n                          Use {app.name}\n                        </Text>\n                      </Grid>\n                    </Grid>\n                  </Card>\n                </StyledLink>\n              </StyledGridItem>\n            ))}\n          </StyledGrid>\n        </WidgetBody>\n      </WidgetContainer>\n    </Grid>\n  )\n}\n","import { ReactElement, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@gnosis.pm/safe-react-components'\nimport { generatePath, Link } from 'react-router-dom'\nimport Skeleton from '@material-ui/lab/Skeleton/Skeleton'\nimport { Grid } from '@material-ui/core'\nimport { sampleSize, uniqBy } from 'lodash'\n\nimport { screenSm, screenMd } from 'src/theme/variables'\nimport { useAppList } from 'src/routes/safe/components/Apps/hooks/appList/useAppList'\nimport { GENERIC_APPS_ROUTE } from 'src/routes/routes'\nimport SafeAppCard, {\n  SAFE_APP_CARD_HEIGHT,\n  SAFE_APP_CARD_PADDING,\n} from 'src/routes/safe/components/Apps/components/SafeAppCard/SafeAppCard'\nimport ExploreIcon from 'src/assets/icons/explore.svg'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { getAppsUsageData, rankSafeApps } from 'src/routes/safe/components/Apps/trackAppUsageCount'\nimport { FEATURED_APPS_TAG } from 'src/components/Dashboard/FeaturedApps/FeaturedApps'\nimport { WidgetTitle, WidgetBody, WidgetContainer, Card } from 'src/components/Dashboard/styled'\n\nexport const CARD_PADDING = 24\n\nconst SkeletonWrapper = styled.div`\n  border-radius: 8px;\n  overflow: hidden;\n`\n\nconst StyledExploreBlock = styled.div`\n  background: url(${ExploreIcon}) center top no-repeat;\n  padding-top: 120px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n\n  > button {\n    width: 200px;\n  }\n`\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  grid-template-rows: repeat(2, 1fr);\n  gap: 24px;\n\n  @media (max-width: ${screenMd}px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  @media (max-width: ${screenSm}px) {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n`\n\nconst StyledAppCard = styled(Card)`\n  padding: ${SAFE_APP_CARD_PADDING}px;\n`\n\nconst useRankedApps = (allApps: SafeApp[], pinnedSafeApps: SafeApp[], size: number): SafeApp[] => {\n  return useMemo(() => {\n    if (!allApps.length) return []\n\n    const trackData = getAppsUsageData()\n    const rankedSafeAppIds = rankSafeApps(trackData, pinnedSafeApps)\n    const featuredSafeAppIds = allApps.filter((app) => app.tags?.includes(FEATURED_APPS_TAG)).map((app) => app.id)\n\n    const nonFeaturedApps = allApps.filter((app) => !featuredSafeAppIds.includes(app.id))\n    const nonRankedApps = nonFeaturedApps.filter((app) => !rankedSafeAppIds.includes(app.id))\n\n    const topRankedSafeApps: SafeApp[] = []\n    rankedSafeAppIds.forEach((id) => {\n      const sortedApp = nonFeaturedApps.find((app) => app.id === id)\n      if (sortedApp) topRankedSafeApps.push(sortedApp)\n    })\n\n    // Get random apps that are not ranked and not featured\n    const randomApps = sampleSize(nonRankedApps, size - 1 - topRankedSafeApps.length)\n\n    const resultApps = uniqBy(topRankedSafeApps.concat(pinnedSafeApps, randomApps), 'id')\n\n    // Display size - 1 in order to always display the \"Explore Safe Apps\" card\n    return resultApps.slice(0, size - 1)\n  }, [allApps, pinnedSafeApps, size])\n}\n\nconst SafeApps = ({ size = 6 }: { size?: number }): ReactElement => {\n  const { allApps, pinnedSafeApps, isLoading, togglePin } = useAppList()\n  const displayedApps = useRankedApps(allApps, pinnedSafeApps, size)\n  const allAppsUrl = generatePath(GENERIC_APPS_ROUTE)\n\n  const LoadingState = useMemo(\n    () => (\n      <Grid container spacing={2}>\n        {Array.from(Array(size).keys()).map((key) => (\n          <Grid item xs={12} md={4} key={key}>\n            <SkeletonWrapper>\n              <Skeleton variant=\"rect\" height={SAFE_APP_CARD_HEIGHT + 2 * SAFE_APP_CARD_PADDING} />\n            </SkeletonWrapper>\n          </Grid>\n        ))}\n      </Grid>\n    ),\n    [size],\n  )\n\n  if (isLoading) return LoadingState\n\n  return (\n    <WidgetContainer id=\"safe-apps\">\n      <WidgetTitle>Safe Apps</WidgetTitle>\n\n      <WidgetBody>\n        <StyledGrid>\n          {displayedApps.map((safeApp) => (\n            <SafeAppCard\n              key={safeApp.id}\n              safeApp={safeApp}\n              togglePin={togglePin}\n              size=\"md\"\n              isPinned={pinnedSafeApps.some((pinnedSafeApp) => pinnedSafeApp.id === safeApp.id)}\n            />\n          ))}\n\n          <StyledLink to={allAppsUrl}>\n            <StyledAppCard>\n              <StyledExploreBlock>\n                <Button size=\"md\" color=\"primary\" variant=\"contained\">\n                  Explore Safe Apps\n                </Button>\n              </StyledExploreBlock>\n            </StyledAppCard>\n          </StyledLink>\n        </StyledGrid>\n      </WidgetBody>\n    </WidgetContainer>\n  )\n}\n\nexport default SafeApps\n","import { ReactElement, useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Grid } from '@material-ui/core'\nimport { Button } from '@gnosis.pm/safe-react-components'\nimport AppstoreButton from 'src/components/AppstoreButton'\nimport { trackEvent, CustomEvent } from 'src/utils/googleTagManager'\nimport useCachedState from 'src/utils/storage/useCachedState'\nimport MOBILE_APP_EVENTS from 'src/utils/events/mobile-app-promotion'\nimport { WidgetTitle } from '../styled'\n\nconst MAX_SLIDES = 5\nconst CLOSE_SLIDE = 6\nconst localStorageKey = 'mobileBannerClosed'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  width: 480px;\n  height: 224px;\n`\n\nconst StyledBanner = styled.div`\n  background-color: ${(props) => props.theme.colors.white};\n  border-radius: 8px;\n  background-position: 0 0;\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-image: ${({ $count }: { $count: number }) => `url(./mobile-banner/${$count}.png)`};\n  transition: background-image 100ms linear;\n  cursor: ${({ $count }: { $count: number }) => ($count === 1 ? 'default' : 'pointer')};\n  height: 100%;\n  width: 100%;\n\n  &:after {\n    content: '';\n    background-image: ${({ $count }: { $count: number }) =>\n      $count !== CLOSE_SLIDE ? `url(./mobile-banner/${$count + 1}.png)` : 'none'};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    z-index: 2;\n    right: 24px;\n    bottom: 27px;\n    width: 119px;\n    height: 38px;\n    cursor: pointer;\n  }\n`\n\nconst StyledAppstoreButton = styled.div`\n  position: absolute;\n  z-index: 2;\n  left: 37px;\n  bottom: 27px;\n  opacity: 0;\n  cursor: pointer;\n`\n\nconst StyledCloseButton = styled.button`\n  position: absolute;\n  z-index: 2;\n  right: 21px;\n  top: 22px;\n  opacity: 0.5;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  opacity: 0;\n`\n\nconst StyledBackButton = styled.button`\n  position: absolute;\n  z-index: 2;\n  left: 38px;\n  bottom: 30px;\n  opacity: 0.5;\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n  opacity: 0;\n`\n\nconst StyledButtons = styled.div`\n  position: absolute;\n  z-index: 2;\n  left: 22px;\n  bottom: 30px;\n  cursor: pointer;\n  opacity: 0;\n`\n\nconst UserSurvey = ({ onDone }: { onDone: () => void }): ReactElement => {\n  const onReply = useCallback(\n    (event: CustomEvent) => {\n      trackEvent(event)\n\n      setTimeout(() => {\n        onDone()\n      }, 300)\n    },\n    [onDone],\n  )\n\n  return (\n    <>\n      <StyledBanner $count={CLOSE_SLIDE} />\n\n      <StyledButtons>\n        <Button size=\"md\" variant=\"outlined\" color=\"primary\" onClick={() => onReply(MOBILE_APP_EVENTS.alreadyUse)}>\n          Already use it!\n        </Button>\n\n        <Button size=\"md\" variant=\"outlined\" color=\"primary\" onClick={() => onReply(MOBILE_APP_EVENTS.notInterested)}>\n          Not interested\n        </Button>\n      </StyledButtons>\n    </>\n  )\n}\n\nconst MobileAppBanner = (): ReactElement | null => {\n  const [count, setCount] = useState<number>(1)\n  const [closing, setClosing] = useState<boolean>(false)\n  const [closed, setClosed] = useCachedState(localStorageKey)\n\n  const onClick = useCallback(() => {\n    setCount((prevCount) => (prevCount === MAX_SLIDES ? 1 : prevCount + 1))\n    trackEvent(MOBILE_APP_EVENTS.dashboardBannerClick)\n  }, [])\n\n  const onBack = useCallback(() => {\n    setCount((prevCount) => (prevCount === 1 ? MAX_SLIDES : prevCount - 1))\n    trackEvent(MOBILE_APP_EVENTS.dashboardBannerClick)\n  }, [])\n\n  const onClose = useCallback(() => {\n    setClosing(true)\n    trackEvent(MOBILE_APP_EVENTS.dashboardBannerClose)\n  }, [])\n\n  const onDone = useCallback(() => {\n    setClosed(true)\n  }, [setClosed])\n\n  return closed ? null : (\n    <Grid item xs={12} lg={6}>\n      <WidgetTitle>&nbsp;</WidgetTitle>\n\n      <StyledContainer>\n        {closing ? (\n          <UserSurvey onDone={onDone} />\n        ) : (\n          <>\n            <StyledBanner $count={count} onClick={onClick} />\n\n            <StyledCloseButton onClick={onClose} aria-label=\"Close mobile banner\" />\n\n            <StyledBackButton onClick={onBack} aria-label=\"Previous mobile banner slide\" />\n\n            {count === 1 && (\n              <StyledAppstoreButton>\n                <AppstoreButton placement=\"dashboard\" />\n              </StyledAppstoreButton>\n            )}\n          </>\n        )}\n      </StyledContainer>\n    </Grid>\n  )\n}\n\nexport default MobileAppBanner\n","import { ReactElement } from 'react'\nimport { Grid } from '@material-ui/core'\n\nimport PendingTxsList from './PendingTxs/PendingTxsList'\nimport Overview from './Overview/Overview'\nimport SafeApps from './SafeApps'\nimport { FeaturedApps } from './FeaturedApps/FeaturedApps'\nimport MobileAppBanner from './MobileAppBanner'\nimport { DashboardTitle } from './styled'\n\nconst Dashboard = (): ReactElement => {\n  return (\n    <Grid container spacing={3}>\n      <DashboardTitle>Dashboard</DashboardTitle>\n\n      <Grid item xs={12} md={12} lg={6}>\n        <Overview />\n      </Grid>\n\n      <MobileAppBanner />\n\n      <Grid item xs={12} md={6}>\n        <PendingTxsList size={4} />\n      </Grid>\n\n      <FeaturedApps />\n\n      <Grid item xs={12}>\n        <SafeApps />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Dashboard\n","import { ReactElement } from 'react'\nimport Page from 'src/components/layout/Page'\nimport { Box } from '@material-ui/core'\nimport Dashboard from 'src/components/Dashboard'\n\nconst Home = (): ReactElement => {\n  return (\n    <Page>\n      <Box pb={3}>\n        <Dashboard />\n      </Box>\n    </Page>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}