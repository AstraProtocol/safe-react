{"version":3,"sources":["utils/events/safeApps.ts","components/NetworkLabel/NetworkLabel.tsx","routes/safe/components/Apps/hooks/appList/useAppList.ts","routes/safe/components/Apps/hooks/appList/useCustomSafeApps.ts","routes/safe/components/Apps/hooks/appList/usePinnedSafeApps.ts","logic/safe/api/fetchSafeApps.ts","routes/safe/components/Apps/hooks/appList/useRemoteSafeApps.ts","routes/safe/components/Apps/components/SecurityFeedbackModal/styles.tsx","routes/safe/components/Apps/components/SecurityFeedbackModal/SecurityFeedbackDomain.tsx","assets/icons/safe-created.svg","logic/hooks/useQuery.ts","routes/safe/components/Apps/hooks/useSecurityFeedbackModal.ts","routes/safe/components/Apps/components/SecurityFeedbackModal/UnknownAppWarning.tsx","../node_modules/lodash/uniq.js","routes/SafeAppLandingPage/components/SafeAppsDetails.tsx","assets/icons/demo.svg","routes/SafeAppLandingPage/components/TryDemoSafe.tsx","routes/SafeAppLandingPage/components/CreateNewSafe.tsx","components/SafeAddressSelector/SafeAddressSelector.tsx","routes/SafeAppLandingPage/components/UseYourSafe.tsx","routes/SafeAppLandingPage/components/UserSafeSection.tsx","routes/SafeAppLandingPage/SafeAppLandingPage.tsx"],"names":["SAFE_APPS","OPEN_APP","event","GTM_EVENT","CLICK","action","PIN","UNPIN","SEARCH","META","ADD_CUSTOM_APP","TRANSACTION_CONFIRMED","TRANSACTION_REJECTED","LEGACY_API_CALL","SHARED_APP_LANDING","SHARED_APP_CHAIN_ID","SHARED_APP_OPEN_DEMO","SHARED_APP_OPEN_AFTER_SAFE_CREATION","SAFE_APPS_EVENTS","addEventCategory","NetworkLabel","props","networkInfo","onClick","flexGrow","selectedNetwork","getChainInfo","StyledLabel","theme","chainName","styled","span","extraSmallFontSize","xs","sm","backgroundColor","border","textColor","fontColor","useAppList","useRemoteSafeApps","remoteSafeApps","remoteAppsFetchStatus","status","useState","customSafeApps","setCustomSafeApps","loaded","setLoaded","updateCustomSafeApps","useCallback","newCustomSafeApps","saveToStorage","APPS_STORAGE_KEY","map","url","useEffect","fetchAppCallback","res","error","prev","prevAppsCopy","appIndex","findIndex","a","splice","fetchStatus","FETCH_STATUS","SUCCESS","serializedApps","loadFromStorage","app","getEmptySafeApp","trim","id","custom","forEach","getAppInfoFromUrl","then","appFromUrl","catch","err","logError","Errors","_900","message","loadCustomApps","useCustomSafeApps","pinnedSafeAppIds","updatePinnedSafeApps","pinnedAppIds","PINNED_SAFE_APP_IDS","filteredPinnedAppsIds","filter","pinnedAppId","some","loadPinnedAppIds","usePinnedSafeApps","remoteIsLoading","LOADING","allApps","useMemo","sort","b","name","toLowerCase","localeCompare","appList","customApps","persistedApp","pinnedSafeApps","includes","addCustomApp","newList","removeApp","appId","newPersistedList","togglePin","appName","newPinnedIds","trackEvent","label","indexOf","push","getSafeApp","urlInstance","URL","safeAppUrl","hostname","pathname","find","appUrlInstance","isSameUrl","isLoading","fetchSafeAppsList","getSafeApps","_getChainId","client_url","window","location","origin","fetchPromise","setRemoteSafeApps","NOT_ASKED","setStatus","dispatch","useDispatch","loadAppsList","finally","result","length","String","Error","ERROR","_902","showNotification","NOTIFICATIONS","SAFE_APPS_FETCH_ERROR_MSG","StyledTitle","Title","centered","bold","StyledSecurityTitle","Text","StyledIcon","Icon","StyledSecurityFeedbackContentText","showInOneLine","SecurityFeedbackDomain","size","type","color","useQuery","search","useLocation","URLSearchParams","APPS_SECURITY_FEEDBACK_MODAL","useSecurityFeedbackModal","didMount","useRef","getAppUrl","useSafeAppUrl","appsReviewed","setAppsReviewed","extendedListReviewed","setExtendedListReviewed","customAppsReviewed","setCustomAppsReviewed","consentAccepted","setConsentAccepted","isDisclaimerReadingCompleted","setIsDisclaimerReadingCompleted","securityStepsStatus","current","isSafeAppInDefaultList","isFirstTimeAccessingApp","safeAppId","isModalVisible","onComplete","shouldHide","reviewedApps","onRemoveCustomApp","appUrl","isConsentAccepted","isExtendedListReviewed","StyledBox","Box","StyledWarningTitle","isColumnLayout","StyledWarningText","StyledText","StyledFormControlLabel","FormControlLabel","colors","inputDisabled","UnknownAppWarning","onHideWarning","toggleHideWarning","setToggleHideWarning","display","flexDirection","height","alignItems","mt","control","checked","onChange","baseUniq","require","module","exports","array","SafeAppDetails","iconUrl","description","availableChains","showAvailableChains","isLoaded","DetailsContainer","SafeIcon","src","onError","setSafeAppLogoFallback","alt","DescriptionContainer","SafeAppTitle","Separator","ChainLabel","ChainsContainer","chainId","chainInfo","getChainById","currentTarget","onerror","fallbackSafeAppLogoSvg","div","img","Divider","black300","TryDemoSafe","history","useHistory","demoSafeUrl","demoSafeRoute","encodeURI","SafeDemoContainer","Spacer","DemoSvg","StyledDemoButton","preventDefault","to","component","Link","variant","Button","secondary","CreateNewSafe","createSafeLink","OPEN_SAFE_ROUTE","encodeURIComponent","SAFE_ROUTES","APPS","SuccessSvg","StyledCreateButton","SafeAddressSelector","safes","value","shouldShowShortName","dataTestid","FormControl","StyledSafeSelector","autoWidth","disableUnderline","IconComponent","ExpandMore","fullWidth","safe","StyledMenuItem","address","shortName","hash","showAvatar","shortenHash","Select","separator","white","MenuItem","UseYourSafe","defaultSafe","selectedSafe","setSelectedSafe","appsPath","generateSafeRoute","safeAddress","openSafeAppLink","SelectorContainer","newSelectedSafe","target","UserSafeSection","safeAppChainId","userAddress","useSelector","userAccountSelector","lastViewedSafeAddress","lastViewedSafe","safesFromService","useOwnerSafes","safesFromLocalStorage","useLocalSafes","addressBook","addressBookState","compatibleSafes","compatibleChains","reduce","flatSafesFromLocalStorage","flatSafesFromService","uniq","getNameFromAddressBook","getCompatibleSafes","selectedUserSafe","getDefaultSafe","isWalletConnected","hasComplatibleSafes","showConnectWalletSection","UserSafeContainer","ConnectWalletContainer","ConnectWalletButton","ConnectButton","addressBookEntry","compatibleUserSafes","safeInTheSameChain","Container","SafeAppLandingPage","query","get","isValidChain","isValidChainId","setChainId","isConfigServiceLoading","safeAppDetailsFromConfigService","useAsync","safeAppDetailsFromManifest","manifestError","isManifestLoading","safeAppDetails","isSafeAppMissing","chainIds","showLoader","StyledCard","LoaderContainer","ActionsContainer","WELCOME_ROUTE","main","Card"],"mappings":"kHAAA,uDAGMA,EAAY,CAChBC,SAAU,CACRC,MAAOC,IAAUC,MACjBC,OAAQ,iBAEVC,IAAK,CACHJ,MAAOC,IAAUC,MACjBC,OAAQ,gBAEVE,MAAO,CACLL,MAAOC,IAAUC,MACjBC,OAAQ,kBAEVG,OAAQ,CACNN,MAAOC,IAAUM,KACjBJ,OAAQ,uBAEVK,eAAgB,CACdR,MAAOC,IAAUM,KACjBJ,OAAQ,uBAEVM,sBAAuB,CACrBT,MAAOC,IAAUM,KACjBJ,OAAQ,yBAEVO,qBAAsB,CACpBV,MAAOC,IAAUM,KACjBJ,OAAQ,wBAEVQ,gBAAiB,CACfX,MAAOC,IAAUM,KACjBJ,OAAQ,mBAEVS,mBAAoB,CAClBZ,MAAOC,IAAUM,KACjBJ,OAAQ,mCAEVU,oBAAqB,CACnBb,MAAOC,IAAUM,KACjBJ,OAAQ,sBAEVW,qBAAsB,CACpBd,MAAOC,IAAUM,KACjBJ,OAAQ,kCAEVY,oCAAqC,CACnCf,MAAOC,IAAUM,KACjBJ,OAAQ,wCAKCa,EAAmBC,YAAiBnB,EADtB,c,mFC7BZoB,IAXf,SAAsBC,GACpB,IAAQC,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SACxBC,EAAkBH,GAAeI,cAEvC,OACE,cAACC,EAAD,yBAAaJ,QAASA,EAASC,SAAUA,GAAcC,EAAgBG,OAAvE,IAA8E,cAAaP,EAAM,eAAjG,SACGI,EAAgBI,cAcvB,IAAMF,EAAcG,UAAOC,KAAV,yUAMFC,qBACFC,KAAMC,MACG,gBAAGC,EAAH,EAAGA,gBAAH,cAAyBA,QAAzB,IAAyBA,IAAmBC,YACvD,gBAAGC,EAAH,EAAGA,UAAH,cAAmBA,QAAnB,IAAmBA,IAAaC,eAC/B,qBAAGf,QAAyB,UAAY,aAIrC,qBAAGC,SAA2B,EAAI,c,qKCzB3Ce,EAAa,WACjB,MAA0DC,cAAlDC,EAAR,EAAQA,eAAwBC,EAAhC,EAAwBC,OACxB,ECHwB,WACxB,MAA4CC,mBAAoB,IAAhE,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAuBC,uBAAY,SAACC,GACxCL,EAAkBK,GAClBC,YACEC,IACAF,EAAkBG,KAAI,kBAAc,CAAEC,IAAhB,EAAGA,WAE1B,IAiDH,OA/CAC,qBAAU,WACR,IAAMC,EAAmB,SAACC,GAAiC,IAAnBC,EAAkB,wDACxDb,GAAkB,SAACc,GACjB,IAAMC,EAAY,YAAOD,GACnBE,EAAWD,EAAaE,WAAU,SAACC,GAAD,OAAOA,EAAET,MAAQG,EAAIH,OAQ7D,OANII,EACFE,EAAaI,OAAOH,EAAU,GAE9BD,EAAaC,GAAb,2BAA8BJ,GAA9B,IAAmCQ,YAAaC,IAAaC,UAGxDP,OAIY,WAErB,IAEMQ,GAFiBC,YAAiCjB,MAAqB,IAEvCC,KACpC,SAACiB,GAAD,mBAAC,2BACIC,eACAD,GAFL,IAGEhB,IAAKgB,EAAIhB,IAAIkB,OACbC,GAAIH,EAAIhB,IAAIkB,OACZE,QAAQ,OAGZ7B,EAAkBuB,GAClBrB,GAAU,GAEVqB,EAAeO,SAAQ,SAACL,GACtBM,YAAkBN,EAAIhB,KACnBuB,MAAK,SAACC,GACLtB,EAAiB,2BAAKsB,GAAN,IAAkBJ,QAAQ,QAE3CK,OAAM,SAACC,GACNxB,EAAiBc,GAAK,GACtBW,YAASC,IAAOC,KAAR,UAAiBb,EAAIhB,IAArB,aAA6B0B,EAAII,gBAKjDC,KACC,IAEI,CAAEzC,iBAAgBE,SAAQE,wBDxDgBsC,GAAzC1C,EAAR,EAAQA,eAAgBI,EAAxB,EAAwBA,qBACxB,EEdwB,SAACR,EAA2BC,GACpD,MAAiDE,mBAAmB,IAApE,mBAAO4C,EAAP,KAAyBC,EAAzB,KACA,EAA4B7C,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KA4BA,OA1BAQ,qBAAU,YACiB,WACvB,IAAMkC,EAAepB,YAA0BqB,MAAwB,GAGvE,GADmCjD,IAA0ByB,IAAaC,QAC1C,CAE9B,IAAMwB,EAAwBF,EAAaG,QAAO,SAACC,GAAD,OAChDrD,EAAesD,MAAK,SAACxB,GAAD,OAASA,EAAIG,KAAOoB,QAE1CL,EAAqBG,GACrB5C,GAAU,IAIdgD,KACC,CAACtD,EAAuBD,IAG3Be,qBAAU,WAC2Bd,IAA0ByB,IAAaC,SAExEhB,YAAcuC,IAAqBH,KAEpC,CAACA,EAAkB9C,IAEf,CAAE8C,mBAAkBzC,SAAQ0C,wBFhBgBQ,CAAkBxD,EAAgBC,GAA7E8C,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,qBACpBS,EAAkBxD,IAA0ByB,IAAagC,QAEzDC,EAAUC,mBAAQ,WAEtB,MADa,sBAAO5D,GAAP,YAA0BI,IACxByD,MAAK,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAEwC,KAAKC,cAAcC,cAAcH,EAAEC,KAAKC,oBACvE,CAAChE,EAAgBI,IAEd8D,EAAUN,mBAAQ,WACtB,OAAO5D,EAAe6D,MAAK,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAEwC,KAAKC,cAAcC,cAAcH,EAAEC,KAAKC,oBAC9E,CAAChE,IAEEmE,EAAaP,mBACjB,kBAEExD,EACGgD,QAAO,SAACgB,GAAD,OAAmBpE,EAAesD,MAAK,SAACxB,GAAD,OAASA,EAAIhB,MAAQsD,EAAatD,UAChF+C,MAAK,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAEwC,KAAKC,cAAcC,cAAcH,EAAEC,KAAKC,oBAC9D,CAAC5D,EAAgBJ,IAGbqE,EAAiBT,mBACrB,kBAAMM,EAAQd,QAAO,SAACtB,GAAD,OAASiB,EAAiBuB,SAASxC,EAAIG,SAC5D,CAACc,EAAkBmB,IAGfK,EAAe9D,uBACnB,SAACqB,GACC,IAAM0C,EAAO,sBAAOpE,GAAP,CAAuB0B,IACpCtB,EAAqBgE,KAEvB,CAAChE,EAAsBJ,IAGnBqE,EAAYhE,uBAChB,SAACiE,GACC,IAAMC,EAAmBvE,EAAegD,QAAO,qBAAGnB,KAAgByC,KAClElE,EAAqBmE,KAEvB,CAACnE,EAAsBJ,IAGnBwE,EAAYnE,uBAChB,SAACqB,GACC,IAAY4C,EAAyB5C,EAA7BG,GAAiB4C,EAAY/C,EAAlBiC,KACbe,EAAY,YAAO/B,GACLA,EAAiBuB,SAASI,IAG5CK,YAAW,2BAAKtG,IAAiBX,OAAvB,IAA8BkH,MAAOH,KAC/CC,EAAatD,OAAOsD,EAAaG,QAAQP,GAAQ,KAEjDK,YAAW,2BAAKtG,IAAiBZ,KAAvB,IAA4BmH,MAAOH,KAC7CC,EAAaI,KAAKR,IAGpB1B,EAAqB8B,KAEvB,CAAC9B,EAAsBD,IAGnBoC,EAAa1E,uBACjB,SAACK,GACC,IAAMsE,EAAc,IAAIC,IAAIvE,GACtBwE,EAAU,UAAMF,EAAYG,SAAlB,YAA8BH,EAAYI,UAE1D,OAAOtB,EAAQuB,MAAK,SAAC3D,GACnB,IAAM4D,EAAiB,IAAIL,IAAJ,OAAQvD,QAAR,IAAQA,OAAR,EAAQA,EAAKhB,KAEpC,GAAI6E,YAAU,GAAD,cAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAgBH,SAApB,mBAAgCG,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAgBF,UAAYF,GACvE,OAAOxD,OAIb,CAACoC,IAGH,MAAO,CACLP,UACAO,UACAC,aACAE,iBACAI,YACAG,YACAL,eACAqB,UAAWnC,EACX0B,gB,+KG5GSU,EAAiB,uCAAG,sBAAAtE,EAAA,+EACxBuE,sBAAYC,cAAe,CAChCC,WAAYC,OAAOC,SAASC,UAFC,2CAAH,qDCa1BC,EAA8C,KAS5CrG,EAAoB,WACxB,MAA4CI,mBAAoB,IAAhE,mBAAOH,EAAP,KAAuBqG,EAAvB,KACA,EAA4BlG,mBAAuBuB,IAAa4E,WAAhE,mBAAOpG,EAAP,KAAeqG,EAAf,KACMC,EAAWC,cAwBjB,OAtBA1F,qBAAU,WACR,IAAM2F,EAAY,uCAAG,4BAAAnF,EAAA,6DACnBgF,EAAU7E,IAAagC,SADJ,kBAblB0C,IACHA,EAAeP,KAEjBO,EAAaO,SAAQ,kBAAOP,EAAe,QACpCA,EASgB,oBAGXQ,EAHW,kBAKbA,OALa,EAKbA,EAAQC,QALK,iBAMfR,EAAkBO,EAAO/F,KAAI,SAACiB,GAAD,mBAAC,eAAcA,GAAf,IAAoBL,YAAaC,IAAaC,QAASM,GAAI6E,OAAOhF,EAAIG,UACnGsE,EAAU7E,IAAaC,SAPR,8BAST,IAAIoF,MAAM,iCATD,0DAYjBR,EAAU7E,IAAasF,OACvBvE,YAASC,IAAOuE,KAAM,KAAErE,SACxB4D,EAASU,YAAiBC,IAAcC,4BAdvB,0DAAH,qDAkBlBV,MACC,CAACF,IAEG,CAAExG,iBAAgBE,Y,mIClDdmH,EAAchI,kBAAOiI,QAAPjI,CAAH,2GACR,qBAAGkI,SAA2B,SAAW,UAGxC,qBAAGC,KAAmB,OAAS,YAGnCC,EAAsBpI,kBAAOqI,OAAPrI,CAAH,0F,6ECO1BsI,EAAatI,kBAAOuI,OAAPvI,CAAH,uFAMVwI,EAAoCxI,kBAAOqI,OAAPrI,CAAH,qOASnC,qBAAGyI,eACU,2DAMFC,IA9BuD,SAAC,GAAgD,IAA9CjH,EAA6C,EAA7CA,IAAKgH,EAAwC,EAAxCA,cAC5E,OACE,eAACD,EAAD,CAAmCG,KAAK,KAAKF,gBAAiBA,EAA9D,UACE,cAACH,EAAD,CAAYM,KAAK,QAAQC,MAAM,UAAUF,KAAK,OADhD,IACyDlH,O,kCCZ9C,QAA0B,0C,kCCAzC,qDAGMqH,EAAW,WACf,IAAQC,EAAWC,cAAXD,OAER,OAAOxE,mBAAQ,kBAAM,IAAI0E,gBAAgBF,KAAS,CAACA,M,2HCD/CG,EAA+B,+BAS/BC,EAA2B,WAS/B,IAAMC,EAAWC,kBAAO,GAExB,EAAkC5I,cAA1B8F,EAAR,EAAQA,UAAWT,EAAnB,EAAmBA,WAEbrE,GAAM6H,EADUC,cAAdD,aAGR,EAAwCxI,mBAAmB,IAA3D,mBAAO0I,EAAP,KAAqBC,EAArB,KACA,EAAwD3I,oBAAS,GAAjE,mBAAO4I,EAAP,KAA6BC,EAA7B,KACA,EAAoD7I,mBAAmB,IAAvE,mBAAO8I,EAAP,KAA2BC,EAA3B,KACA,EAA8C/I,oBAAkB,GAAhE,mBAAOgJ,EAAP,KAAwBC,EAAxB,KACA,EAAwEjJ,oBAAS,GAAjF,mBAAOkJ,EAAP,KAAqCC,EAArC,KAEAvI,qBAAU,WACR,IAAMwI,EAAoD1H,YAAgB0G,IAAiC,CACzGM,aAAc,GACdE,sBAAsB,EACtBE,mBAAoB,GACpBE,iBAAiB,GAGfI,IACFT,EAAgBS,EAAoBV,cACpCG,EAAwBO,EAAoBR,sBAC5CG,EAAsBK,EAAoBN,oBAC1CG,EAAmBG,EAAoBJ,oBAExC,IAEHpI,qBAAU,WACHD,GACHwI,GAAgC,KAEjC,CAACxI,IAEJC,qBAAU,WACH0H,EAASe,QAKd7I,YAAc4H,EAA8B,CAC1CM,eACAE,uBACAE,qBACAE,oBARAV,EAASe,SAAU,IAUpB,CAACX,EAAcM,EAAiBF,EAAoBF,IAEvD,IAAMU,EAAyB7F,mBAAQ,WACrC,QAAK9C,KAEIqE,EAAWrE,KACnB,CAACqE,EAAYrE,IAEV4I,EAA0B9F,mBAAQ,WAAO,IAAD,EAC5C,IAAK9C,EAAK,OAAO,EAEjB,IAAM6I,EAAS,UAAGxE,EAAWrE,UAAd,aAAG,EAAiBmB,GAEnC,OAAO0H,IAAY,OAACd,QAAD,IAACA,OAAD,EAACA,EAAcvE,SAASqF,MAAa,OAACV,QAAD,IAACA,OAAD,EAACA,EAAoB3E,SAASxD,MACrF,CAAC+H,EAAcI,EAAoB9D,EAAYrE,IAE5C8I,EAAiBhG,mBAAQ,WAO7B,OAN0BgC,GAAa6C,EAASe,WACbL,GACCM,GAA0BC,IAE3DD,GAA0BC,IAA4BL,KAGxD,CAACF,EAAiBE,EAA8BK,EAAyB9D,EAAW6D,IAEjFI,EAAapJ,uBACjB,SAACqJ,GAAyB,IAAD,EACvBV,GAAmB,GAEnB,IAAMO,EAAS,UAAGxE,EAAWrE,UAAd,aAAG,EAAiBmB,GAEnC,GAAI0H,IAAcd,EAAavE,SAASqF,GAAY,CAClD,IAAMI,EAAY,sBAAOlB,GAAP,CAAqBc,IAEvCb,EAAgBiB,QAEhB,GAAID,IAAeb,EAAmB3E,SAASxD,GAAM,CACnD,IAAMiJ,EAAY,sBAAOd,GAAP,CAA2BnI,IAE7CoI,EAAsBa,GAIrBhB,GACHC,GAAwB,GAG1BM,GAAgC,KAElC,CAACT,EAAcI,EAAoBF,EAAsB5D,EAAYrE,IAGjEkJ,EAAoBvJ,uBACxB,SAACwJ,GACC,IAAMF,EAAed,EAAmB7F,QAAO,SAACtC,GAAD,OAASA,IAAQmJ,KAChEf,EAAsBa,KAExB,CAACd,IAGH,MAAO,CACLW,iBACAH,yBACAC,0BACAQ,kBAAmBf,EACnBgB,uBAAwBpB,EACxBc,aACAG,uB,6ICzEEI,EAAY/K,kBAAOgL,IAAPhL,CAAH,+CAITiL,EAAqBjL,kBAAOgI,IAAPhI,CAAH,yFAGR,qBAAGkL,eAAuC,OAAS,UAG7DC,EAAoBnL,kBAAOqI,OAAPrI,CAAH,mEAEP,qBAAGkL,eAAuC,SAAW,UAG/DE,EAAapL,kBAAOqI,OAAPrI,CAAH,gDACA,qBAAGkL,eAAuC,SAAW,UAG/D5C,EAAatI,kBAAOuI,OAAPvI,CAAH,sKAEH,qBAAGkL,eAAuC,OAAS,UAClD,qBAAGA,eAAuC,OAAS,UAW3DG,EAAyBrL,kBAAOsL,IAAPtL,CAAH,yHAIf,qBAAGF,MAAkByL,OAAOC,iBAI1BC,IA1FW,SAAC,GAAwE,IAAtEhK,EAAqE,EAArEA,IAAKiK,EAAgE,EAAhEA,cAChC,EAAkD5K,oBAAS,GAA3D,mBAAO6K,EAAP,KAA0BC,EAA1B,KAOMV,IAAmBQ,EAEzB,OACE,eAACX,EAAD,CACEc,QAASX,EAAiB,OAAS,QACnCY,cAAc,SACdC,OAAQb,EAAiB,OAAS,OAClCc,WAAW,SAJb,UAME,eAAC,IAAD,CAAKH,QAASX,EAAiB,QAAU,OAAQc,WAAW,SAASC,GAAIf,EAAiB,EAAI,EAA9F,UACE,cAAC5C,EAAD,CAAYM,KAAK,QAAQD,KAAK,KAAKuC,eAAgBA,IACnD,cAACD,EAAD,CAAoBtC,KAAK,KAAKR,MAAI,EAAC+C,eAAgBA,EAAnD,wBAIF,cAACC,EAAD,CAAmBD,eAAgBA,EAAgBvC,KAAK,KAAxD,2FAGA,uBACA,cAACyC,EAAD,CAAYF,eAAgBA,EAAgBvC,KAAK,KAAjD,2FAGA,uBACClH,GAAO,cAAC,IAAD,CAAwBA,IAAKA,EAAKgH,eAAa,IACvD,uBACCiD,GACC,cAACL,EAAD,CACEa,QACE,cAAC,IAAD,CACEC,QAASR,EACTS,SAnC0B,WACvB,OAAbV,QAAa,IAAbA,MAAiBC,GACjBC,GAAsBD,IAkCZjH,KAAK,+BAGTiB,MAAM,uC,qBCzDhB,IAAI0G,EAAWC,EAAQ,KAwBvBC,EAAOC,QAJP,SAAcC,GACZ,OAAQA,GAASA,EAAMjF,OAAU6E,EAASI,GAAS,K,iTC0CtCC,EA5CQ,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,QAASjI,EAA4E,EAA5EA,KAAMkI,EAAsE,EAAtEA,YAAaC,EAAyD,EAAzDA,gBAC9CC,GAAqC,OAAfD,QAAe,IAAfA,OAAA,EAAAA,EAAiBrF,QAAS,EACtD,EAA6D2B,cAArC4D,EAAxB,EAAQxC,eAA0BH,EAAlC,EAAkCA,uBAElC,OACE,qCACE,eAAC4C,EAAD,WACE,cAACC,EAAD,CAAUC,IAAKP,EAASQ,QAASC,EAAwBC,IAAG,UAAK3I,GAAQ,WAAb,WAC5D,eAAC4I,GAAD,WACE,cAACC,GAAD,CAAc5E,KAAK,KAAnB,SAAyBjE,IACzB,8BAAMkI,UAGV,cAACY,GAAD,IAGCV,GACC,qCACE,cAACW,GAAD,CAAY9E,KAAK,KAAjB,gCACA,cAAC+E,GAAD,UACGb,EAAgBrL,KAAI,SAACmM,GACpB,IAAMC,EAAYC,YAAaF,GAC/B,OACEC,EAAU7N,WACR,8BACE,cAACT,EAAA,EAAD,CAAcE,YAAaoO,KADnBD,QAOlB,cAACH,GAAD,OAGHT,IAAa3C,GACZ,qCACE,cAACqB,EAAA,EAAD,IACA,cAAC+B,GAAD,WASJJ,EAAyB,SAACvL,GAC9BA,EAAMiM,cAAcC,QAAU,KAC9BlM,EAAMiM,cAAcZ,IAAMc,KAGtBhB,EAAmBhN,UAAOiO,IAAV,8CAGhBhB,EAAWjN,UAAOkO,IAAV,6DAKRX,GAAevN,kBAAOiI,QAAPjI,CAAH,wEAKZsN,GAAuBtN,UAAOiO,IAAV,oEAKpBT,GAAYxN,kBAAOmO,IAAPnO,CAAH,+CAITyN,GAAazN,kBAAOqI,OAAPrI,CAAH,0CACLoO,YAELV,GAAkB1N,UAAOiO,IAAV,sI,SC/FN,OAA0B,iC,UC+C1BI,GAnCK,SAAC,GAAiE,IAA/DpI,EAA8D,EAA9DA,WACfqI,EAAUC,cACVC,EAAW,UAAMC,IAAN,mBAA8BC,UAAUzI,GAAc,KASvE,OACE,eAAC0I,GAAD,WACE,cAAC,QAAD,CAAOhG,KAAK,KAAZ,kDAEA,cAACiG,GAAA,EAAD,IAEA,qBAAKvB,IAAI,OAAOtB,OAAQ,GAAImB,IAAK2B,KAEhC5I,GACC,cAAC6I,GAAD,CACErP,QAjBoB,SAACrB,GAC3BA,EAAM2Q,iBAENrJ,YAAW,2BAAKtG,IAAiBF,sBAAvB,IAA6CyG,MAAOM,KAC9DqI,EAAQzI,KAAK2I,IAcPQ,GAAIR,EACJ3F,MAAM,UACNoG,UAAWC,KACXvG,KAAK,KACLwG,QAAQ,WANV,0BAiBFR,GAAoB3O,UAAOiO,IAAV,qHAQjBa,GAAmB9O,kBAAOoP,SAAPpP,CAAH,0EACAqP,a,+GC9BPC,GAhBO,SAAC,GAAsD,IAApDrJ,EAAmD,EAAnDA,WACjBsJ,EAAc,UAAMC,IAAN,qBAAkCC,mBAAmB,GAAD,OAAIC,IAAYC,KAAhB,mBAA+B1J,KAEvG,OACE,qCACE,qBAAKoH,IAAI,QAAQtB,OAAQ,GAAImB,IAAK0C,OAElC,cAACC,GAAD,CAAoBlH,KAAK,KAAKE,MAAM,UAAUsG,QAAQ,YAAYF,UAAWC,KAAMF,GAAIO,EAAvF,SACE,cAAC,OAAD,CAAM5G,KAAK,KAAKE,MAAM,QAAtB,mCAUFgH,GAAqB7P,kBAAOoP,SAAPpP,CAAH,iD,mDCyBT8P,GAnCa,SAAC,GAMkB,IAL7CC,EAK4C,EAL5CA,MACAC,EAI4C,EAJ5CA,MACA5D,EAG4C,EAH5CA,SAG4C,IAF5C6D,2BAE4C,SAD5CC,EAC4C,EAD5CA,WAEA,OACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAD,CACE,cAAaF,GAAc,gBAC3BF,MAAOA,EACP5D,SAAUA,EACViE,WAAS,EACTC,kBAAgB,EAChBC,cAAeC,KACfC,WAAS,EAPX,SASGV,EAAMvO,KAAI,SAACkP,GAAD,OACT,cAACC,GAAD,CAAwDX,MAAOU,EAAKE,QAApE,SACE,cAAC,cAAD,CACEX,oBAAqBA,EACrBY,UAAWhD,YAAa6C,EAAK/C,SAASkD,UACtCC,KAAMJ,EAAKE,QACXG,YAAU,EACVC,YAAa,EACbtM,KAAMgM,EAAKhM,QAPf,UAAwBgM,EAAKE,QAA7B,YAAwCF,EAAK/C,kBAkBjDyC,GAAqBpQ,kBAAOiR,KAAPjR,CAAH,sTAKA,qBAAGF,MAAkByL,OAAO2F,aAC5B,qBAAGpR,MAAkByL,OAAO4F,QASvC/C,YAIPuC,GAAiB3Q,kBAAOoR,KAAPpR,CAAH,8CCzBLqR,GAnCK,SAAC,GAAwE,IAAtEtB,EAAqE,EAArEA,MAAO9J,EAA8D,EAA9DA,WAAYqL,EAAkD,EAAlDA,YACxC,EAAwCxQ,mBAA2BwQ,GAAnE,mBAAOC,EAAP,KAAqBC,EAArB,KAEA9P,qBAAU,WACR8P,EAAgBF,KACf,CAACA,IACJ,IAAMG,EAAWC,YAAkBhC,IAAYC,KAAM,CACnDkB,UAAWhD,YAAa0D,EAAa5D,SAASkD,UAC9Cc,YAAaJ,EAAaX,UAEtBgB,EAAe,UAAMH,EAAN,mBAAyB/C,UAAUzI,IACxD,OACE,qCACE,cAAC4L,GAAD,UACE,cAAC,GAAD,CACE7B,MAAOuB,EAAaX,QACpBb,MAAOA,EACP3D,SAAU,SAAChO,GACT,IAAM0T,EAAkB/B,EAAM3J,MAAK,qBAAGwK,UAA0BxS,EAAM2T,OAAO/B,SACzE8B,GACFN,EAAgBM,QAMxB,cAAC,GAAD,CAAoBnJ,KAAK,KAAKE,MAAM,UAAUsG,QAAQ,YAAYF,UAAWC,KAAMF,GAAI4C,EAAvF,SACE,cAAC,OAAD,CAAMjJ,KAAK,KAAKE,MAAM,QAAtB,gCAUFgH,GAAqB7P,kBAAOoP,SAAPpP,CAAH,iDAIlB6R,GAAoB7R,UAAOiO,IAAV,mIC0BR+D,GAtCS,SAAC,GAAkF,IAAhF/L,EAA+E,EAA/EA,WAAY4G,EAAmE,EAAnEA,gBAAiBoF,EAAkD,EAAlDA,eAChDC,EAAcC,aAAYC,MAC1BC,EAAwBF,aAAYG,MACpCC,EAAmBC,eACnBC,EAAwBC,eACxBC,EAAcR,aAAYS,MAQ1BC,EApCmB,SACzBJ,EACAF,EACAO,EACAH,GAEA,OAAOG,EAAiBC,QAAO,SAACxL,EAAQoG,GAAa,IAAD,EAC5CqF,GAA4B,UAAAP,EAAsB9E,UAAtB,eAAgCnM,KAAI,qBAAGoP,aAA0B,GAC7FqC,EAAuBV,EAAiB5E,IAAY,GAKpDkF,EAFWK,KAAK,GAAD,oBAAKD,GAAL,aAA8BD,KAElBxR,KAAI,SAACoP,GAAD,MAAc,CACjDA,UACAjD,UACAjJ,KAAMyO,GAAuBR,EAAa/B,EAASjD,OAGrD,MAAM,GAAN,oBAAWpG,GAAX,aAAsBsL,MACrB,IAgBqBO,CAAmBX,EAAuBF,EALxC1F,EAAgB5H,SAASgN,GAE/CpF,EAFqB,uBACjBA,GADiB,CACAoF,IAI6EU,GAEhGU,EAAmBC,GAAeT,EAAiBR,EAAuBJ,GAE1EsB,IAAsBrB,EACtBsB,EAAsBX,EAAgBrL,OAAS,EAE/CiM,GAA4BF,IAAsBC,EAExD,OACE,eAACE,GAAD,WACE,cAAC,QAAD,CAAO/K,KAAK,KAAZ,0CACC8K,EACC,cAACE,GAAD,UACE,cAACC,GAAD,CAAqB,cAAY,yBAEjCP,EACF,cAAC,GAAD,CAAapN,WAAYA,EAAYqL,YAAa+B,EAAkBtD,MAAO8C,IAE3E,cAAC,GAAD,CAAe5M,WAAYA,QAQ7ByN,GAAoB1T,UAAOiO,IAAV,qHAQjB0F,GAAyB3T,UAAOiO,IAAV,mHAMtB2F,GAAsB5T,kBAAO6T,KAAP7T,CAAH,6CAInBmT,GAAyB,SAACR,EAAiC/B,EAAiBjD,GAChF,IAAMmG,EAAmBnB,EAAYvM,MACnC,SAAC0N,GAAD,OAAsBA,EAAiBlD,UAAYA,GAAWkD,EAAiBnG,UAAYA,KAG7F,OAAuB,OAAhBmG,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBpP,OAAQ,IAG7B4O,GAAiB,SACrBS,EACA1B,EACAJ,GAGA,IAAMK,EAAiByB,EAAoB3N,MACzC,SAACsK,GAAD,OAAUA,EAAKE,UAAYyB,GAAyB3B,EAAK/C,UAAYsE,KAGvE,GAAIK,EACF,OAAOA,EAIT,IAAM0B,EAAqBD,EAAoB3N,MAAK,SAACsK,GAAD,OAAUA,EAAK/C,UAAYsE,KAE/E,OAAI+B,GAKGD,EAAoB,ICvBvBE,IAFSC,UAzFY,WACzB,IAAMC,EAAQrL,cACRmJ,EAAiBkC,EAAMC,IAAI,WAC3BnO,EAAakO,EAAMC,IAAI,UACvBC,EAAe9P,mBAAQ,kBAAM+P,YAAerC,KAAiB,CAACA,IAGpEvQ,qBAAU,WAEJ2S,GACFE,YAAWtC,KAEZ,CAACA,EAAgBoC,IAGpB,MAAuD5T,cAA/CoE,EAAR,EAAQA,QAAoB2P,EAA5B,EAAiBjO,UACXkO,EAAkC5P,EAAQuB,MAAK,gBAAG3E,EAAH,EAAGA,IAAH,OAAawE,IAAexE,KAGjF,EAAuEiT,YAAQ,sBAAU,sBAAAxS,EAAA,0DACnF+D,EADmF,yCAE9ElD,YAAkBkD,IAF4D,aAIjF,IAAIyB,MAAM,6BAJuE,2CAKtF,CAACzB,IALJ,mBAAO0O,EAAP,KAAmCC,EAAnC,KAAkDC,EAAlD,KAOMC,EAAiBL,GAAmCE,EACpDpO,EAAYiO,GAA0BK,EACtCE,GAAoBxO,IAAcuO,GAAkBF,EAEpD/H,GAAgC,OAAdiI,QAAc,IAAdA,OAAA,EAAAA,EAAgBE,WAAY,GAE9CC,EAAa1O,IAAcuO,EAejC,OAbApT,qBAAU,YACH6E,GAAauO,IAChBpP,YAAW,2BACNtG,IAAiBJ,oBADZ,IAER2G,MAAK,OAAEmP,QAAF,IAAEA,OAAF,EAAEA,EAAgBpQ,QAEzBgB,YAAW,2BACNtG,IAAiBH,qBADZ,IAER0G,MAAOsM,QAGV,CAAC1L,EAAWuO,EAAgB7C,IAE1BhM,GAAeoO,IAAgBU,EAKlC,cAACd,GAAD,UACE,cAACiB,GAAD,UACGD,EACC,cAACE,GAAD,UACE,cAAC,SAAD,CAAQxM,KAAK,SAGf,qCAEGmM,GACC,cAAC,EAAD,CACEnI,QAASmI,EAAenI,QACxBjI,KAAMoQ,EAAepQ,KACrBkI,YAAW,OAAEkI,QAAF,IAAEA,OAAF,EAAEA,EAAgBlI,YAC7BC,gBAAiBA,IAIrB,eAACuI,GAAD,WAEGnD,GACC,cAAC,GAAD,CACEhM,WAAYA,EACZ4G,gBAAiBA,EACjBoF,eAAgBA,IAIpB,cAAC,GAAD,CAAahM,WAAYA,cAhC5B,cAAC,IAAD,CAAU+I,GAAIqG,OA2CPrV,UAAOsV,KAAV,gGAMTJ,GAAalV,kBAAOuV,OAAPvV,CAAH,iHAOVmV,GAAkBnV,UAAOiO,IAAV,wHAOfmH,GAAmBpV,UAAOiO,IAAV","file":"static/js/36.6a87c6aa.chunk.js","sourcesContent":["import { GTM_EVENT } from 'src/utils/googleTagManager'\nimport { addEventCategory } from 'src/utils/events/utils'\n\nconst SAFE_APPS = {\n  OPEN_APP: {\n    event: GTM_EVENT.CLICK,\n    action: 'Open Safe App',\n  },\n  PIN: {\n    event: GTM_EVENT.CLICK,\n    action: 'Pin Safe App',\n  },\n  UNPIN: {\n    event: GTM_EVENT.CLICK,\n    action: 'Unpin Safe App',\n  },\n  SEARCH: {\n    event: GTM_EVENT.META,\n    action: 'Search for Safe App',\n  },\n  ADD_CUSTOM_APP: {\n    event: GTM_EVENT.META,\n    action: 'Add custom Safe App',\n  },\n  TRANSACTION_CONFIRMED: {\n    event: GTM_EVENT.META,\n    action: 'Transaction Confirmed',\n  },\n  TRANSACTION_REJECTED: {\n    event: GTM_EVENT.META,\n    action: 'Transaction Rejected',\n  },\n  LEGACY_API_CALL: {\n    event: GTM_EVENT.META,\n    action: 'Legacy API call',\n  },\n  SHARED_APP_LANDING: {\n    event: GTM_EVENT.META,\n    action: 'Shared App landing page visited',\n  },\n  SHARED_APP_CHAIN_ID: {\n    event: GTM_EVENT.META,\n    action: 'Shared App chainId',\n  },\n  SHARED_APP_OPEN_DEMO: {\n    event: GTM_EVENT.META,\n    action: 'Open demo safe from shared app',\n  },\n  SHARED_APP_OPEN_AFTER_SAFE_CREATION: {\n    event: GTM_EVENT.META,\n    action: 'Open shared app after Safe creation',\n  },\n}\n\nconst SAFE_APPS_CATEGORY = 'safe-apps'\nexport const SAFE_APPS_EVENTS = addEventCategory(SAFE_APPS, SAFE_APPS_CATEGORY)\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { ChainInfo } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { getChainInfo } from 'src/config'\nimport { border, extraSmallFontSize, sm, xs, fontColor } from 'src/theme/variables'\n\ntype Props = {\n  networkInfo?: ChainInfo\n  onClick?: () => void\n  flexGrow?: boolean\n  ['data-testid']?: string\n}\n\nfunction NetworkLabel(props: Props): ReactElement {\n  const { networkInfo, onClick, flexGrow } = props\n  const selectedNetwork = networkInfo || getChainInfo()\n\n  return (\n    <StyledLabel onClick={onClick} flexGrow={flexGrow} {...selectedNetwork.theme} data-testid={props['data-testid']}>\n      {selectedNetwork.chainName}\n    </StyledLabel>\n  )\n}\n\nexport default NetworkLabel\n\ntype StyledLabelTypes = {\n  backgroundColor: string\n  textColor: string\n  onClick?: () => void\n  flexGrow?: boolean\n}\n\nconst StyledLabel = styled.span<StyledLabelTypes>`\n  position: relative;\n  bottom: 2px;\n  line-height: normal;\n  display: inline-block;\n  min-width: 70px;\n  font-size: ${extraSmallFontSize};\n  padding: ${xs} ${sm};\n  background-color: ${({ backgroundColor }) => backgroundColor ?? border};\n  color: ${({ textColor }) => textColor ?? fontColor};\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'inherit')};\n  text-align: center;\n  border-radius: 4px;\n  text-transform: capitalize;\n  flex-grow: ${({ flexGrow }) => (flexGrow ? 1 : 'initial')};\n`\n","import { useCallback, useMemo } from 'react'\n\nimport { SafeApp } from '../../types'\nimport { useCustomSafeApps } from './useCustomSafeApps'\nimport { useRemoteSafeApps } from './useRemoteSafeApps'\nimport { usePinnedSafeApps } from './usePinnedSafeApps'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\nimport { isSameUrl } from '../../utils'\n\ntype UseAppListReturnType = {\n  allApps: SafeApp[]\n  appList: SafeApp[]\n  customApps: SafeApp[]\n  pinnedSafeApps: SafeApp[]\n  togglePin: (app: SafeApp) => void\n  removeApp: (appId: string) => void\n  addCustomApp: (app: SafeApp) => void\n  isLoading: boolean\n  getSafeApp: (url: string) => SafeApp | undefined\n}\n\nconst useAppList = (): UseAppListReturnType => {\n  const { remoteSafeApps, status: remoteAppsFetchStatus } = useRemoteSafeApps()\n  const { customSafeApps, updateCustomSafeApps } = useCustomSafeApps()\n  const { pinnedSafeAppIds, updatePinnedSafeApps } = usePinnedSafeApps(remoteSafeApps, remoteAppsFetchStatus)\n  const remoteIsLoading = remoteAppsFetchStatus === FETCH_STATUS.LOADING\n\n  const allApps = useMemo(() => {\n    const allApps = [...remoteSafeApps, ...customSafeApps]\n    return allApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps, customSafeApps])\n\n  const appList = useMemo(() => {\n    return remoteSafeApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps])\n\n  const customApps = useMemo(\n    () =>\n      // Filter out custom apps that are now part of the production app list\n      customSafeApps\n        .filter((persistedApp) => !remoteSafeApps.some((app) => app.url === persistedApp.url))\n        .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())),\n    [customSafeApps, remoteSafeApps],\n  )\n\n  const pinnedSafeApps = useMemo(\n    () => appList.filter((app) => pinnedSafeAppIds.includes(app.id)),\n    [pinnedSafeAppIds, appList],\n  )\n\n  const addCustomApp = useCallback(\n    (app: SafeApp): void => {\n      const newList = [...customSafeApps, app]\n      updateCustomSafeApps(newList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const removeApp = useCallback(\n    (appId: string): void => {\n      const newPersistedList = customSafeApps.filter(({ id }) => id !== appId)\n      updateCustomSafeApps(newPersistedList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const togglePin = useCallback(\n    (app: SafeApp): void => {\n      const { id: appId, name: appName } = app\n      const newPinnedIds = [...pinnedSafeAppIds]\n      const isAppPinned = pinnedSafeAppIds.includes(appId)\n\n      if (isAppPinned) {\n        trackEvent({ ...SAFE_APPS_EVENTS.UNPIN, label: appName })\n        newPinnedIds.splice(newPinnedIds.indexOf(appId), 1)\n      } else {\n        trackEvent({ ...SAFE_APPS_EVENTS.PIN, label: appName })\n        newPinnedIds.push(appId)\n      }\n\n      updatePinnedSafeApps(newPinnedIds)\n    },\n    [updatePinnedSafeApps, pinnedSafeAppIds],\n  )\n\n  const getSafeApp = useCallback(\n    (url: string): SafeApp | undefined => {\n      const urlInstance = new URL(url)\n      const safeAppUrl = `${urlInstance.hostname}/${urlInstance.pathname}`\n\n      return appList.find((app: SafeApp) => {\n        const appUrlInstance = new URL(app?.url)\n\n        if (isSameUrl(`${appUrlInstance?.hostname}/${appUrlInstance?.pathname}`, safeAppUrl)) {\n          return app\n        }\n      })\n    },\n    [appList],\n  )\n\n  return {\n    allApps,\n    appList,\n    customApps,\n    pinnedSafeApps,\n    removeApp,\n    togglePin,\n    addCustomApp,\n    isLoading: remoteIsLoading,\n    getSafeApp,\n  }\n}\n\nexport { useAppList }\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { APPS_STORAGE_KEY, getAppInfoFromUrl, getEmptySafeApp } from '../../utils'\nimport { StoredSafeApp, SafeApp } from '../../types'\n\ntype ReturnType = {\n  customSafeApps: SafeApp[]\n  loaded: boolean\n  updateCustomSafeApps: (newCustomSafeApps: SafeApp[]) => void\n}\n\ntype CustomSafeApp = StoredSafeApp\n\n/*\n  This hook is used to manage the list of custom safe apps.\n  What it does:\n  1. Loads a list of custom safe apps from local storage\n  2. Does some backward compatibility checks (supported app networks, etc)\n  3. Tries to fetch the app info (manifest.json) from the app url\n*/\nconst useCustomSafeApps = (): ReturnType => {\n  const [customSafeApps, setCustomSafeApps] = useState<SafeApp[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  const updateCustomSafeApps = useCallback((newCustomSafeApps: SafeApp[]) => {\n    setCustomSafeApps(newCustomSafeApps)\n    saveToStorage(\n      APPS_STORAGE_KEY,\n      newCustomSafeApps.map(({ url }) => ({ url })),\n    )\n  }, [])\n\n  useEffect(() => {\n    const fetchAppCallback = (res: SafeApp, error = false) => {\n      setCustomSafeApps((prev) => {\n        const prevAppsCopy = [...prev]\n        const appIndex = prevAppsCopy.findIndex((a) => a.url === res.url)\n\n        if (error) {\n          prevAppsCopy.splice(appIndex, 1)\n        } else {\n          prevAppsCopy[appIndex] = { ...res, fetchStatus: FETCH_STATUS.SUCCESS }\n        }\n\n        return prevAppsCopy\n      })\n    }\n\n    const loadCustomApps = () => {\n      // recover apps from storage (third-party apps added by the user)\n      const storageAppList = loadFromStorage<CustomSafeApp[]>(APPS_STORAGE_KEY) || []\n      // if the app does not expose supported networks, include them. (backward compatible)\n      const serializedApps = storageAppList.map(\n        (app): SafeApp => ({\n          ...getEmptySafeApp(),\n          ...app,\n          url: app.url.trim(),\n          id: app.url.trim(),\n          custom: true,\n        }),\n      )\n      setCustomSafeApps(serializedApps)\n      setLoaded(true)\n\n      serializedApps.forEach((app) => {\n        getAppInfoFromUrl(app.url)\n          .then((appFromUrl) => {\n            fetchAppCallback({ ...appFromUrl, custom: true })\n          })\n          .catch((err) => {\n            fetchAppCallback(app, true)\n            logError(Errors._900, `${app.url}, ${err.message}`)\n          })\n      })\n    }\n\n    loadCustomApps()\n  }, [])\n\n  return { customSafeApps, loaded, updateCustomSafeApps }\n}\n\nexport { useCustomSafeApps }\n","import { useState, useEffect } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { PINNED_SAFE_APP_IDS } from '../../utils'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\n\ntype ReturnType = {\n  pinnedSafeAppIds: string[]\n  loaded: boolean\n  updatePinnedSafeApps: (newPinnedSafeAppIds: string[]) => void\n}\n\nconst usePinnedSafeApps = (remoteSafeApps: SafeApp[], remoteAppsFetchStatus: FETCH_STATUS): ReturnType => {\n  const [pinnedSafeAppIds, updatePinnedSafeApps] = useState<string[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    const loadPinnedAppIds = () => {\n      const pinnedAppIds = loadFromStorage<string[]>(PINNED_SAFE_APP_IDS) || []\n\n      const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n      if (isRemoteSafeAppsListLoaded) {\n        // we remove pinned Safe Apps that are not included in the remote list, see #2847\n        const filteredPinnedAppsIds = pinnedAppIds.filter((pinnedAppId) =>\n          remoteSafeApps.some((app) => app.id === pinnedAppId),\n        )\n        updatePinnedSafeApps(filteredPinnedAppsIds)\n        setLoaded(true)\n      }\n    }\n\n    loadPinnedAppIds()\n  }, [remoteAppsFetchStatus, remoteSafeApps])\n\n  // we only update pinned apps in the localStorage when remote Apps are loaded\n  useEffect(() => {\n    const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n    if (isRemoteSafeAppsListLoaded) {\n      saveToStorage(PINNED_SAFE_APP_IDS, pinnedSafeAppIds)\n    }\n  }, [pinnedSafeAppIds, remoteAppsFetchStatus])\n\n  return { pinnedSafeAppIds, loaded, updatePinnedSafeApps }\n}\n\nexport { usePinnedSafeApps }\n","import { getSafeApps, SafeAppData } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { _getChainId } from 'src/config'\n\nexport const fetchSafeAppsList = async (): Promise<SafeAppData[]> => {\n  return getSafeApps(_getChainId(), {\n    client_url: window.location.origin,\n  })\n}\n","import { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { SafeAppData } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { showNotification } from 'src/logic/notifications/store/notifications'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\nimport { fetchSafeAppsList } from 'src/logic/safe/api/fetchSafeApps'\n\ntype ReturnType = {\n  remoteSafeApps: SafeApp[]\n  status: FETCH_STATUS\n}\n\n// Memoize the fetch request so that simulteneous calls\n// to this function return the same promise\nlet fetchPromise: Promise<SafeAppData[]> | null = null\nconst memoizedFetchSafeApps = (): Promise<SafeAppData[]> => {\n  if (!fetchPromise) {\n    fetchPromise = fetchSafeAppsList()\n  }\n  fetchPromise.finally(() => (fetchPromise = null))\n  return fetchPromise\n}\n\nconst useRemoteSafeApps = (): ReturnType => {\n  const [remoteSafeApps, setRemoteSafeApps] = useState<SafeApp[]>([])\n  const [status, setStatus] = useState<FETCH_STATUS>(FETCH_STATUS.NOT_ASKED)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const loadAppsList = async () => {\n      setStatus(FETCH_STATUS.LOADING)\n      try {\n        const result = await memoizedFetchSafeApps()\n\n        if (result?.length) {\n          setRemoteSafeApps(result.map((app) => ({ ...app, fetchStatus: FETCH_STATUS.SUCCESS, id: String(app.id) })))\n          setStatus(FETCH_STATUS.SUCCESS)\n        } else {\n          throw new Error('Empty apps array 🤬')\n        }\n      } catch (e) {\n        setStatus(FETCH_STATUS.ERROR)\n        logError(Errors._902, e.message)\n        dispatch(showNotification(NOTIFICATIONS.SAFE_APPS_FETCH_ERROR_MSG))\n      }\n    }\n\n    loadAppsList()\n  }, [dispatch])\n\n  return { remoteSafeApps, status }\n}\n\nexport { useRemoteSafeApps }\n","import styled from 'styled-components'\nimport { Title, Text } from '@gnosis.pm/safe-react-components'\n\nexport const StyledTitle = styled(Title)<{ color?: string; bold?: boolean; centered?: boolean }>`\n  text-align: ${({ centered }) => (centered ? 'center' : 'left')};\n  margin: 24px 0;\n  color: inherit;\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n`\n\nexport const StyledSecurityTitle = styled(Text)`\n  text-align: center;\n  color: #b2bbc0;\n  margin: 0 80px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Icon, Text } from '@gnosis.pm/safe-react-components'\n\ntype SecurityFeedbackDomainProps = {\n  url: string\n  showInOneLine?: boolean\n}\n\nconst SecurityFeedbackDomain: React.FC<SecurityFeedbackDomainProps> = ({ url, showInOneLine }): React.ReactElement => {\n  return (\n    <StyledSecurityFeedbackContentText size=\"xl\" showInOneLine={!!showInOneLine}>\n      <StyledIcon type=\"check\" color=\"primary\" size=\"sm\" /> {url}\n    </StyledSecurityFeedbackContentText>\n  )\n}\n\nconst StyledIcon = styled(Icon)`\n  position: relative;\n  top: 4px;\n  padding-right: 4px;\n`\n\nconst StyledSecurityFeedbackContentText = styled(Text)<{ showInOneLine: boolean }>`\n  display: block;\n  font-size: 12px;\n  font-weight: bold;\n  overflow-wrap: anywhere;\n  background-color: #effaf8;\n  padding: 10px 15px 10px 10px;\n  border-radius: 8px;\n  max-width: 75%;\n  ${({ showInOneLine }) =>\n    showInOneLine &&\n    `overflow-y: hidden;\n     white-space: nowrap;\n     `}\n`\n\nexport default SecurityFeedbackDomain\n","export default __webpack_public_path__ + \"static/media/safe-created.ad262168.svg\";","import { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst useQuery = (): URLSearchParams => {\n  const { search } = useLocation()\n\n  return useMemo(() => new URLSearchParams(search), [search])\n}\n\nexport { useQuery }\n","import { useState, useEffect, useCallback, useMemo, useRef } from 'react'\nimport { useSafeAppUrl } from 'src/logic/hooks/useSafeAppUrl'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { useAppList } from 'src/routes/safe/components/Apps/hooks/appList/useAppList'\n\nconst APPS_SECURITY_FEEDBACK_MODAL = 'APPS_SECURITY_FEEDBACK_MODAL'\n\ntype SecurityFeedbackModalStorage = {\n  appsReviewed: string[]\n  extendedListReviewed: boolean\n  customAppsReviewed: string[]\n  consentAccepted: boolean\n}\n\nconst useSecurityFeedbackModal = (): {\n  isModalVisible: boolean\n  isSafeAppInDefaultList: boolean\n  isFirstTimeAccessingApp: boolean\n  isConsentAccepted: boolean\n  isExtendedListReviewed: boolean\n  onComplete: (shouldHide: boolean) => void\n  onRemoveCustomApp: (appUrl: string) => void\n} => {\n  const didMount = useRef(false)\n\n  const { isLoading, getSafeApp } = useAppList()\n  const { getAppUrl } = useSafeAppUrl()\n  const url = getAppUrl()\n\n  const [appsReviewed, setAppsReviewed] = useState<string[]>([])\n  const [extendedListReviewed, setExtendedListReviewed] = useState(false)\n  const [customAppsReviewed, setCustomAppsReviewed] = useState<string[]>([])\n  const [consentAccepted, setConsentAccepted] = useState<boolean>(false)\n  const [isDisclaimerReadingCompleted, setIsDisclaimerReadingCompleted] = useState(false)\n\n  useEffect(() => {\n    const securityStepsStatus: SecurityFeedbackModalStorage = loadFromStorage(APPS_SECURITY_FEEDBACK_MODAL) || {\n      appsReviewed: [],\n      extendedListReviewed: false,\n      customAppsReviewed: [],\n      consentAccepted: false,\n    }\n\n    if (securityStepsStatus) {\n      setAppsReviewed(securityStepsStatus.appsReviewed)\n      setExtendedListReviewed(securityStepsStatus.extendedListReviewed)\n      setCustomAppsReviewed(securityStepsStatus.customAppsReviewed)\n      setConsentAccepted(securityStepsStatus.consentAccepted)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!url) {\n      setIsDisclaimerReadingCompleted(false)\n    }\n  }, [url])\n\n  useEffect(() => {\n    if (!didMount.current) {\n      didMount.current = true\n      return\n    }\n\n    saveToStorage(APPS_SECURITY_FEEDBACK_MODAL, {\n      appsReviewed,\n      extendedListReviewed,\n      customAppsReviewed,\n      consentAccepted,\n    })\n  }, [appsReviewed, consentAccepted, customAppsReviewed, extendedListReviewed])\n\n  const isSafeAppInDefaultList = useMemo(() => {\n    if (!url) return false\n\n    return !!getSafeApp(url)\n  }, [getSafeApp, url])\n\n  const isFirstTimeAccessingApp = useMemo(() => {\n    if (!url) return true\n\n    const safeAppId = getSafeApp(url)?.id\n\n    return safeAppId ? !appsReviewed?.includes(safeAppId) : !customAppsReviewed?.includes(url)\n  }, [appsReviewed, customAppsReviewed, getSafeApp, url])\n\n  const isModalVisible = useMemo(() => {\n    const isComponentReady = !isLoading && didMount.current\n    const shouldShowLegalDisclaimer = !consentAccepted\n    const shouldShowSecurityPractices = isSafeAppInDefaultList && isFirstTimeAccessingApp\n    const shouldShowUnknownAppWarning =\n      !isSafeAppInDefaultList && isFirstTimeAccessingApp && !isDisclaimerReadingCompleted\n\n    return isComponentReady && (shouldShowLegalDisclaimer || shouldShowSecurityPractices || shouldShowUnknownAppWarning)\n  }, [consentAccepted, isDisclaimerReadingCompleted, isFirstTimeAccessingApp, isLoading, isSafeAppInDefaultList])\n\n  const onComplete = useCallback(\n    (shouldHide: boolean) => {\n      setConsentAccepted(true)\n\n      const safeAppId = getSafeApp(url)?.id\n\n      if (safeAppId && !appsReviewed.includes(safeAppId)) {\n        const reviewedApps = [...appsReviewed, safeAppId]\n\n        setAppsReviewed(reviewedApps)\n      } else {\n        if (shouldHide && !customAppsReviewed.includes(url)) {\n          const reviewedApps = [...customAppsReviewed, url]\n\n          setCustomAppsReviewed(reviewedApps)\n        }\n      }\n\n      if (!extendedListReviewed) {\n        setExtendedListReviewed(true)\n      }\n\n      setIsDisclaimerReadingCompleted(true)\n    },\n    [appsReviewed, customAppsReviewed, extendedListReviewed, getSafeApp, url],\n  )\n\n  const onRemoveCustomApp = useCallback(\n    (appUrl: string): void => {\n      const reviewedApps = customAppsReviewed.filter((url) => url !== appUrl)\n      setCustomAppsReviewed(reviewedApps)\n    },\n    [customAppsReviewed],\n  )\n\n  return {\n    isModalVisible,\n    isSafeAppInDefaultList,\n    isFirstTimeAccessingApp,\n    isConsentAccepted: consentAccepted,\n    isExtendedListReviewed: extendedListReviewed,\n    onComplete,\n    onRemoveCustomApp,\n  }\n}\n\nexport { useSecurityFeedbackModal }\n","import { useState } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport styled from 'styled-components'\nimport { Text, Icon } from '@gnosis.pm/safe-react-components'\n\nimport { StyledTitle } from 'src/routes/safe/components/Apps/components/SecurityFeedbackModal/styles'\nimport SecurityFeedbackDomain from './SecurityFeedbackDomain'\n\ntype UnknownAppWarningProps = {\n  url?: string\n  onHideWarning?: (hideWarning: boolean) => void\n}\n\nconst UnknownAppWarning = ({ url, onHideWarning }: UnknownAppWarningProps): React.ReactElement => {\n  const [toggleHideWarning, setToggleHideWarning] = useState(false)\n\n  const handleToggleWarningPreference = (): void => {\n    onHideWarning?.(!toggleHideWarning)\n    setToggleHideWarning(!toggleHideWarning)\n  }\n\n  const isColumnLayout = !!onHideWarning\n\n  return (\n    <StyledBox\n      display={isColumnLayout ? 'flex' : 'block'}\n      flexDirection=\"column\"\n      height={isColumnLayout ? '100%' : 'auto'}\n      alignItems=\"center\"\n    >\n      <Box display={isColumnLayout ? 'block' : 'flex'} alignItems=\"center\" mt={isColumnLayout ? 6 : 0}>\n        <StyledIcon type=\"alert\" size=\"md\" isColumnLayout={isColumnLayout} />\n        <StyledWarningTitle size=\"sm\" bold isColumnLayout={isColumnLayout}>\n          Warning\n        </StyledWarningTitle>\n      </Box>\n      <StyledWarningText isColumnLayout={isColumnLayout} size=\"xl\">\n        The application you are trying to access is not in the default Safe Apps list\n      </StyledWarningText>\n      <br />\n      <StyledText isColumnLayout={isColumnLayout} size=\"lg\">\n        Check the link you are using and ensure that it comes from a source you trust\n      </StyledText>\n      <br />\n      {url && <SecurityFeedbackDomain url={url} showInOneLine />}\n      <br />\n      {onHideWarning && (\n        <StyledFormControlLabel\n          control={\n            <Checkbox\n              checked={toggleHideWarning}\n              onChange={handleToggleWarningPreference}\n              name=\"Warning message preference\"\n            />\n          }\n          label=\"Don't show this warning again\"\n        />\n      )}\n    </StyledBox>\n  )\n}\n\nconst StyledBox = styled(Box)`\n  color: #e8663d;\n`\n\nconst StyledWarningTitle = styled(StyledTitle)<{ isColumnLayout: boolean }>`\n  font-size: 24px;\n  margin-left: 4px;\n  margin-top: ${({ isColumnLayout }) => (isColumnLayout ? '12px' : '24px')};\n`\n\nconst StyledWarningText = styled(Text)<{ isColumnLayout: boolean }>`\n  color: inherit;\n  text-align: ${({ isColumnLayout }) => (isColumnLayout ? 'center' : 'left')};\n`\n\nconst StyledText = styled(Text)<{ isColumnLayout: boolean }>`\n  text-align: ${({ isColumnLayout }) => (isColumnLayout ? 'center' : 'left')};\n`\n\nconst StyledIcon = styled(Icon)<{ isColumnLayout: boolean }>`\n  svg {\n    width: ${({ isColumnLayout }) => (isColumnLayout ? '32px' : '24px')};\n    height: ${({ isColumnLayout }) => (isColumnLayout ? '32px' : '24px')};\n  }\n  .icon-color {\n    fill: #e8663d;\n  }\n\n  .icon-stroke {\n    stroke: #e8663d;\n  }\n`\n\nconst StyledFormControlLabel = styled(FormControlLabel)`\n  flex: 1;\n  color: #000;\n  .MuiIconButton-root:not(.Mui-checked) {\n    color: ${({ theme }) => theme.colors.inputDisabled};\n  }\n`\n\nexport default UnknownAppWarning\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","import { ReactElement, SyntheticEvent } from 'react'\nimport styled from 'styled-components'\nimport Divider from '@material-ui/core/Divider'\nimport { Title, Text } from '@gnosis.pm/safe-react-components'\n\nimport { getChainById } from 'src/config'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport { black300 } from 'src/theme/variables'\nimport fallbackSafeAppLogoSvg from 'src/assets/icons/apps.svg'\nimport { useSecurityFeedbackModal } from 'src/routes/safe/components/Apps/hooks/useSecurityFeedbackModal'\nimport UnknownAppWarning from 'src/routes/safe/components/Apps/components/SecurityFeedbackModal/UnknownAppWarning'\n\ntype SafeAppDetailsTypes = {\n  iconUrl: string\n  name: string\n  description: string\n  availableChains: string[]\n}\n\nconst SafeAppDetails = ({ iconUrl, name, description, availableChains }: SafeAppDetailsTypes): ReactElement => {\n  const showAvailableChains = availableChains?.length > 0\n  const { isModalVisible: isLoaded, isSafeAppInDefaultList } = useSecurityFeedbackModal()\n\n  return (\n    <>\n      <DetailsContainer>\n        <SafeIcon src={iconUrl} onError={setSafeAppLogoFallback} alt={`${name || 'Safe App'} Logo`} />\n        <DescriptionContainer>\n          <SafeAppTitle size=\"sm\">{name}</SafeAppTitle>\n          <div>{description}</div>\n        </DescriptionContainer>\n      </DetailsContainer>\n      <Separator />\n\n      {/* Available chains */}\n      {showAvailableChains && (\n        <>\n          <ChainLabel size=\"lg\">Available networks</ChainLabel>\n          <ChainsContainer>\n            {availableChains.map((chainId) => {\n              const chainInfo = getChainById(chainId)\n              return (\n                chainInfo.chainName && (\n                  <div key={chainId}>\n                    <NetworkLabel networkInfo={chainInfo} />\n                  </div>\n                )\n              )\n            })}\n          </ChainsContainer>\n          <Separator />\n        </>\n      )}\n      {isLoaded && !isSafeAppInDefaultList && (\n        <>\n          <UnknownAppWarning />\n          <Separator />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default SafeAppDetails\n\nconst setSafeAppLogoFallback = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = fallbackSafeAppLogoSvg\n}\n\nconst DetailsContainer = styled.div`\n  display: flex;\n`\nconst SafeIcon = styled.img`\n  width: 90px;\n  height: 90px;\n`\n\nconst SafeAppTitle = styled(Title)`\n  margin-top: 0px;\n  margin-bottom: 12px;\n`\n\nconst DescriptionContainer = styled.div`\n  padding-left: 66px;\n  flex-grow: 1;\n`\n\nconst Separator = styled(Divider)`\n  margin: 24px 0;\n`\n\nconst ChainLabel = styled(Text)`\n  color: ${black300};\n`\nconst ChainsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  && > div {\n    margin-top: 12px;\n    margin-right: 8px;\n  }\n`\n","export default __webpack_public_path__ + \"static/media/demo.424695b1.svg\";","import { MouseEvent, ReactElement } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Title, Button } from '@gnosis.pm/safe-react-components'\n\nimport { demoSafeRoute } from 'src/routes/routes'\nimport { secondary } from 'src/theme/variables'\nimport DemoSvg from 'src/assets/icons/demo.svg'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\nimport Spacer from 'src/components/Spacer'\n\nconst TryDemoSafe = ({ safeAppUrl }: { safeAppUrl: string | null }): ReactElement => {\n  const history = useHistory()\n  const demoSafeUrl = `${demoSafeRoute}?appUrl=${encodeURI(safeAppUrl || '')}`\n\n  const handleDemoSafeClick = (event: MouseEvent) => {\n    event.preventDefault()\n\n    trackEvent({ ...SAFE_APPS_EVENTS.SHARED_APP_OPEN_DEMO, label: safeAppUrl })\n    history.push(demoSafeUrl)\n  }\n\n  return (\n    <SafeDemoContainer>\n      <Title size=\"xs\">Want to try the app before using it?</Title>\n\n      <Spacer />\n\n      <img alt=\"Demo\" height={92} src={DemoSvg} />\n\n      {safeAppUrl && (\n        <StyledDemoButton\n          onClick={handleDemoSafeClick}\n          to={demoSafeUrl}\n          color=\"primary\"\n          component={Link}\n          size=\"lg\"\n          variant=\"outlined\"\n        >\n          Try Demo\n        </StyledDemoButton>\n      )}\n    </SafeDemoContainer>\n  )\n}\n\nexport default TryDemoSafe\n\nconst SafeDemoContainer = styled.div`\n  flex: 1 0 50%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst StyledDemoButton = styled(Button)`\n  border: 2px solid ${secondary};\n  margin-top: 30px;\n`\n","import { ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Text } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nimport SuccessSvg from 'src/assets/icons/safe-created.svg'\nimport { OPEN_SAFE_ROUTE, SAFE_ROUTES } from 'src/routes/routes'\n\ntype CreateNewSafeProps = {\n  safeAppUrl: string\n}\n\nconst CreateNewSafe = ({ safeAppUrl }: CreateNewSafeProps): ReactElement => {\n  const createSafeLink = `${OPEN_SAFE_ROUTE}?redirect=${encodeURIComponent(`${SAFE_ROUTES.APPS}?appUrl=${safeAppUrl}`)}`\n\n  return (\n    <>\n      <img alt=\"Vault\" height={92} src={SuccessSvg} />\n\n      <StyledCreateButton size=\"lg\" color=\"primary\" variant=\"contained\" component={Link} to={createSafeLink}>\n        <Text size=\"xl\" color=\"white\">\n          Create new Safe\n        </Text>\n      </StyledCreateButton>\n    </>\n  )\n}\n\nexport default CreateNewSafe\n\nconst StyledCreateButton = styled(Button)`\n  margin-top: 30px;\n`\n","import { ReactElement, ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { black300 } from 'src/theme/variables'\nimport { getChainById } from 'src/config'\n\ntype SafeAddressSelectorProps = {\n  safes: AddressBookEntry[]\n  value: string\n  onChange: (event: ChangeEvent<{ value: string }>) => void\n  shouldShowShortName?: boolean\n  dataTestid?: string\n}\n\nconst SafeAddressSelector = ({\n  safes,\n  value,\n  onChange,\n  shouldShowShortName = true,\n  dataTestid,\n}: SafeAddressSelectorProps): ReactElement => {\n  return (\n    <FormControl>\n      <StyledSafeSelector\n        data-testid={dataTestid || 'safe-selector'}\n        value={value}\n        onChange={onChange}\n        autoWidth\n        disableUnderline\n        IconComponent={ExpandMore}\n        fullWidth\n      >\n        {safes.map((safe) => (\n          <StyledMenuItem key={`${safe.address}-${safe.chainId}`} value={safe.address}>\n            <EthHashInfo\n              shouldShowShortName={shouldShowShortName}\n              shortName={getChainById(safe.chainId).shortName}\n              hash={safe.address}\n              showAvatar\n              shortenHash={4}\n              name={safe.name}\n            />\n          </StyledMenuItem>\n        ))}\n      </StyledSafeSelector>\n    </FormControl>\n  )\n}\n\nexport default SafeAddressSelector\n\nconst StyledSafeSelector = styled(Select)`\n  &.MuiInput-root {\n    margin: 0;\n    padding: 8px 16px;\n    border-radius: 8px;\n    border: 2px solid ${({ theme }) => theme.colors.separator};\n    background-color: ${({ theme }) => theme.colors.white};\n  }\n\n  & .MuiSelect-select:focus {\n    background-color: inherit;\n  }\n\n  & .MuiSelect-icon {\n    right: 16px;\n    color: ${black300};\n  }\n`\n\nconst StyledMenuItem = styled(MenuItem)`\n  padding: 12px;\n`\n\nexport const getAddressLabel = (address: string): string => {\n  const firstPart = address.slice(0, 6)\n  const lastPart = address.slice(38)\n\n  return `${firstPart}...${lastPart}`\n}\n","import { useEffect, useState, ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Text, Button } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nimport SafeAddressSelector from 'src/components/SafeAddressSelector/SafeAddressSelector'\nimport { getChainById } from 'src/config'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\n\ntype UseYourSafeTypes = {\n  safeAppUrl: string\n  defaultSafe: AddressBookEntry\n  safes: AddressBookEntry[]\n}\n\nconst UseYourSafe = ({ safes, safeAppUrl, defaultSafe }: UseYourSafeTypes): ReactElement => {\n  const [selectedSafe, setSelectedSafe] = useState<AddressBookEntry>(defaultSafe)\n\n  useEffect(() => {\n    setSelectedSafe(defaultSafe)\n  }, [defaultSafe])\n  const appsPath = generateSafeRoute(SAFE_ROUTES.APPS, {\n    shortName: getChainById(selectedSafe.chainId).shortName,\n    safeAddress: selectedSafe.address,\n  })\n  const openSafeAppLink = `${appsPath}?appUrl=${encodeURI(safeAppUrl)}`\n  return (\n    <>\n      <SelectorContainer>\n        <SafeAddressSelector\n          value={selectedSafe.address}\n          safes={safes}\n          onChange={(event) => {\n            const newSelectedSafe = safes.find(({ address }) => address === event.target.value)\n            if (newSelectedSafe) {\n              setSelectedSafe(newSelectedSafe)\n            }\n          }}\n        />\n      </SelectorContainer>\n\n      <StyledCreateButton size=\"lg\" color=\"primary\" variant=\"contained\" component={Link} to={openSafeAppLink}>\n        <Text size=\"xl\" color=\"white\">\n          Connect Safe\n        </Text>\n      </StyledCreateButton>\n    </>\n  )\n}\n\nexport default UseYourSafe\n\nconst StyledCreateButton = styled(Button)`\n  margin-top: 30px;\n`\n\nconst SelectorContainer = styled.div`\n  flex-grow: 1;\n  justify-content: center;\n  margin-top: 24px;\n  max-width: 320px;\n  width: 100%;\n`\n","import { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Title } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\nimport uniq from 'lodash/uniq'\n\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport ConnectButton from 'src/components/ConnectButton'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport useOwnerSafes from 'src/logic/safe/hooks/useOwnerSafes'\nimport useLocalSafes, { LocalSafes } from 'src/logic/safe/hooks/useLocalSafes'\nimport { lastViewedSafe } from 'src/logic/currentSession/store/selectors'\nimport { addressBookState } from 'src/logic/addressBook/store/selectors'\nimport CreateNewSafe from './CreateNewSafe'\nimport UseYourSafe from './UseYourSafe'\n\ntype UserSafeProps = {\n  safeAppUrl: string\n  availableChains: string[]\n  safeAppChainId: string\n}\n\nconst getCompatibleSafes = (\n  safesFromLocalStorage: LocalSafes,\n  safesFromService: Record<string, string[]>,\n  compatibleChains: string[],\n  addressBook: AddressBookEntry[],\n): AddressBookEntry[] => {\n  return compatibleChains.reduce((result, chainId) => {\n    const flatSafesFromLocalStorage = safesFromLocalStorage[chainId]?.map(({ address }) => address) || []\n    const flatSafesFromService = safesFromService[chainId] || []\n\n    // we remove duplicated safes\n    const allSafes = uniq([...flatSafesFromService, ...flatSafesFromLocalStorage])\n\n    const compatibleSafes = allSafes.map((address) => ({\n      address,\n      chainId,\n      name: getNameFromAddressBook(addressBook, address, chainId),\n    }))\n\n    return [...result, ...compatibleSafes]\n  }, [])\n}\n\nconst UserSafeSection = ({ safeAppUrl, availableChains, safeAppChainId }: UserSafeProps): ReactElement => {\n  const userAddress = useSelector(userAccountSelector)\n  const lastViewedSafeAddress = useSelector(lastViewedSafe)\n  const safesFromService = useOwnerSafes()\n  const safesFromLocalStorage = useLocalSafes()\n  const addressBook = useSelector(addressBookState)\n\n  // we include the chainId provided in the query params in the available chains list\n  const compatibleChains = !availableChains.includes(safeAppChainId)\n    ? [...availableChains, safeAppChainId]\n    : availableChains\n\n  // we collect all compatible safes from backend and localstorage\n  const compatibleSafes = getCompatibleSafes(safesFromLocalStorage, safesFromService, compatibleChains, addressBook)\n\n  const selectedUserSafe = getDefaultSafe(compatibleSafes, lastViewedSafeAddress, safeAppChainId)\n\n  const isWalletConnected = !!userAddress\n  const hasComplatibleSafes = compatibleSafes.length > 0\n\n  const showConnectWalletSection = !isWalletConnected && !hasComplatibleSafes\n\n  return (\n    <UserSafeContainer>\n      <Title size=\"xs\">Use the dApp with your Safe!</Title>\n      {showConnectWalletSection ? (\n        <ConnectWalletContainer>\n          <ConnectWalletButton data-testid=\"connect-wallet-btn\" />\n        </ConnectWalletContainer>\n      ) : selectedUserSafe ? (\n        <UseYourSafe safeAppUrl={safeAppUrl} defaultSafe={selectedUserSafe} safes={compatibleSafes} />\n      ) : (\n        <CreateNewSafe safeAppUrl={safeAppUrl} />\n      )}\n    </UserSafeContainer>\n  )\n}\n\nexport default UserSafeSection\n\nconst UserSafeContainer = styled.div`\n  flex: 1 0 50%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst ConnectWalletContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`\nconst ConnectWalletButton = styled(ConnectButton)`\n  height: 52px;\n`\n\nconst getNameFromAddressBook = (addressBook: AddressBookEntry[], address: string, chainId: string) => {\n  const addressBookEntry = addressBook.find(\n    (addressBookEntry) => addressBookEntry.address === address && addressBookEntry.chainId === chainId,\n  )\n\n  return addressBookEntry?.name || ''\n}\n\nconst getDefaultSafe = (\n  compatibleUserSafes: AddressBookEntry[],\n  lastViewedSafeAddress: string | null,\n  safeAppChainId: string | null,\n) => {\n  // as a first option, we use the last viewed user Safe in the provided chain\n  const lastViewedSafe = compatibleUserSafes.find(\n    (safe) => safe.address === lastViewedSafeAddress && safe.chainId === safeAppChainId,\n  )\n\n  if (lastViewedSafe) {\n    return lastViewedSafe\n  }\n\n  // as a second option, we use any user Safe in the provided chain\n  const safeInTheSameChain = compatibleUserSafes.find((safe) => safe.chainId === safeAppChainId)\n\n  if (safeInTheSameChain) {\n    return safeInTheSameChain\n  }\n\n  // as a fallback we salect a random compatible user Safe\n  return compatibleUserSafes[0]\n}\n","import { ReactElement, useEffect, useMemo } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Card, Loader } from '@gnosis.pm/safe-react-components'\n\nimport { isValidChainId } from 'src/config'\nimport { WELCOME_ROUTE } from 'src/routes/routes'\nimport { useAppList } from 'src/routes/safe/components/Apps/hooks/appList/useAppList'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { getAppInfoFromUrl } from 'src/routes/safe/components/Apps/utils'\nimport { setChainId } from 'src/logic/config/utils'\nimport { useQuery } from 'src/logic/hooks/useQuery'\nimport useAsync from 'src/logic/hooks/useAsync'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\nimport SafeAppDetails from 'src/routes/SafeAppLandingPage/components/SafeAppsDetails'\nimport TryDemoSafe from 'src/routes/SafeAppLandingPage/components/TryDemoSafe'\nimport UserSafeSection from './components/UserSafeSection'\n\nconst SafeAppLandingPage = (): ReactElement => {\n  const query = useQuery()\n  const safeAppChainId = query.get('chainId')\n  const safeAppUrl = query.get('appUrl')\n  const isValidChain = useMemo(() => isValidChainId(safeAppChainId), [safeAppChainId])\n\n  // if no valid chainId is present in query params we redirect to the Welcome page\n  useEffect(() => {\n    // we set the valid Safe App chainId in the state\n    if (isValidChain) {\n      setChainId(safeAppChainId as string)\n    }\n  }, [safeAppChainId, isValidChain])\n\n  // fetch Safe App details from the Config service\n  const { appList, isLoading: isConfigServiceLoading } = useAppList()\n  const safeAppDetailsFromConfigService = appList.find(({ url }) => safeAppUrl === url)\n\n  // fetch Safe App details from Manifest.json\n  const [safeAppDetailsFromManifest, manifestError, isManifestLoading] = useAsync<SafeApp>(async () => {\n    if (safeAppUrl) {\n      return getAppInfoFromUrl(safeAppUrl)\n    }\n    throw new Error('No Safe App URL provided.')\n  }, [safeAppUrl])\n\n  const safeAppDetails = safeAppDetailsFromConfigService || safeAppDetailsFromManifest\n  const isLoading = isConfigServiceLoading || isManifestLoading\n  const isSafeAppMissing = !isLoading && !safeAppDetails && manifestError\n\n  const availableChains = safeAppDetails?.chainIds || []\n\n  const showLoader = isLoading || !safeAppDetails\n\n  useEffect(() => {\n    if (!isLoading && safeAppDetails) {\n      trackEvent({\n        ...SAFE_APPS_EVENTS.SHARED_APP_LANDING,\n        label: safeAppDetails?.name,\n      })\n      trackEvent({\n        ...SAFE_APPS_EVENTS.SHARED_APP_CHAIN_ID,\n        label: safeAppChainId,\n      })\n    }\n  }, [isLoading, safeAppDetails, safeAppChainId])\n\n  if (!safeAppUrl || !isValidChain || isSafeAppMissing) {\n    return <Redirect to={WELCOME_ROUTE} />\n  }\n\n  return (\n    <Container>\n      <StyledCard>\n        {showLoader ? (\n          <LoaderContainer>\n            <Loader size=\"md\" />\n          </LoaderContainer>\n        ) : (\n          <>\n            {/* Safe App details */}\n            {safeAppDetails && (\n              <SafeAppDetails\n                iconUrl={safeAppDetails.iconUrl}\n                name={safeAppDetails.name}\n                description={safeAppDetails?.description}\n                availableChains={availableChains}\n              />\n            )}\n\n            <ActionsContainer>\n              {/* User Safe Section */}\n              {safeAppChainId && (\n                <UserSafeSection\n                  safeAppUrl={safeAppUrl}\n                  availableChains={availableChains}\n                  safeAppChainId={safeAppChainId}\n                />\n              )}\n              {/* Demo Safe Section */}\n              <TryDemoSafe safeAppUrl={safeAppUrl} />\n            </ActionsContainer>\n          </>\n        )}\n      </StyledCard>\n    </Container>\n  )\n}\n\nexport default SafeAppLandingPage\n\nconst Container = styled.main`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`\n\nconst StyledCard = styled(Card)`\n  flex-grow: 1;\n  max-width: 850px;\n  border-radius: 20px;\n  padding: 50px 58px;\n`\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 400px;\n`\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n"],"sourceRoot":""}